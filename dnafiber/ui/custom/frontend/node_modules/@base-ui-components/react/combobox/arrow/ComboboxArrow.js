"use strict";
'use client';

var _interopRequireWildcard = require("@babel/runtime/helpers/interopRequireWildcard").default;
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.ComboboxArrow = void 0;
var React = _interopRequireWildcard(require("react"));
var _store = require("@base-ui-components/utils/store");
var _ComboboxPositionerContext = require("../positioner/ComboboxPositionerContext");
var _ComboboxRootContext = require("../root/ComboboxRootContext");
var _store2 = require("../store");
var _useRenderElement = require("../../utils/useRenderElement");
var _popupStateMapping = require("../../utils/popupStateMapping");
/**
 * Displays an element positioned against the anchor.
 * Renders a `<div>` element.
 */
const ComboboxArrow = exports.ComboboxArrow = /*#__PURE__*/React.forwardRef(function ComboboxArrow(componentProps, forwardedRef) {
  const {
    className,
    render,
    ...elementProps
  } = componentProps;
  const store = (0, _ComboboxRootContext.useComboboxRootContext)();
  const {
    arrowRef,
    side,
    align,
    arrowUncentered,
    arrowStyles
  } = (0, _ComboboxPositionerContext.useComboboxPositionerContext)();
  const open = (0, _store.useStore)(store, _store2.selectors.open);
  const state = React.useMemo(() => ({
    open,
    side,
    align,
    uncentered: arrowUncentered
  }), [open, side, align, arrowUncentered]);
  return (0, _useRenderElement.useRenderElement)('div', componentProps, {
    ref: [arrowRef, forwardedRef],
    customStyleHookMapping: _popupStateMapping.popupStateMapping,
    state,
    props: {
      style: arrowStyles,
      'aria-hidden': true,
      ...elementProps
    }
  });
});
if (process.env.NODE_ENV !== "production") ComboboxArrow.displayName = "ComboboxArrow";
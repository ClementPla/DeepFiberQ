import { createSelector } from '@base-ui-components/utils/store';
export const selectors = {
  id: createSelector(state => state.id),
  query: createSelector(state => state.query),
  items: createSelector(state => state.items),
  selectedValue: createSelector(state => state.selectedValue),
  inputValue: createSelector(state => state.inputValue),
  open: createSelector(state => state.open),
  mounted: createSelector(state => state.mounted),
  forceMounted: createSelector(state => state.forceMounted),
  inline: createSelector(state => state.inline),
  activeIndex: createSelector(state => state.activeIndex),
  selectedIndex: createSelector(state => state.selectedIndex),
  isActive: createSelector((state, index) => state.activeIndex === index),
  isSelected: createSelector((state, selectedValue) => {
    if (Array.isArray(state.selectedValue)) {
      return state.selectedValue.includes(selectedValue);
    }
    return state.selectedValue === selectedValue;
  }),
  transitionStatus: createSelector(state => state.transitionStatus),
  popupProps: createSelector(state => state.popupProps),
  inputProps: createSelector(state => state.inputProps),
  triggerProps: createSelector(state => state.triggerProps),
  typeaheadTriggerProps: createSelector(state => state.typeaheadTriggerProps),
  getItemProps: createSelector(state => state.getItemProps),
  positionerElement: createSelector(state => state.positionerElement),
  listElement: createSelector(state => state.listElement),
  triggerElement: createSelector(state => state.triggerElement),
  inputElement: createSelector(state => state.inputElement),
  openMethod: createSelector(state => state.openMethod),
  inputInsidePopup: createSelector(state => state.inputInsidePopup),
  selectionMode: createSelector(state => state.selectionMode),
  listRef: createSelector(state => state.listRef),
  popupRef: createSelector(state => state.popupRef),
  inputRef: createSelector(state => state.inputRef),
  keyboardActiveRef: createSelector(state => state.keyboardActiveRef),
  chipsContainerRef: createSelector(state => state.chipsContainerRef),
  clearRef: createSelector(state => state.clearRef),
  valuesRef: createSelector(state => state.valuesRef),
  allValuesRef: createSelector(state => state.allValuesRef),
  name: createSelector(state => state.name),
  disabled: createSelector(state => state.disabled),
  readOnly: createSelector(state => state.readOnly),
  required: createSelector(state => state.required),
  fieldControlValidation: createSelector(state => state.fieldControlValidation),
  cols: createSelector(state => state.cols),
  isGrouped: createSelector(state => state.isGrouped),
  virtualized: createSelector(state => state.virtualized),
  onOpenChangeComplete: createSelector(state => state.onOpenChangeComplete),
  openOnInputClick: createSelector(state => state.openOnInputClick),
  itemToStringLabel: createSelector(state => state.itemToStringLabel),
  modal: createSelector(state => state.modal),
  autoHighlight: createSelector(state => state.autoHighlight)
};
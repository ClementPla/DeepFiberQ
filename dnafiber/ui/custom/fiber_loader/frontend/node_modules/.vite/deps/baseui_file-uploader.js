import {
  __awaiter,
  __generator,
  __spread,
  init_tslib_es6,
  require_ReactPropTypesSecret,
  require_checkPropTypes,
  require_has,
  require_object_assign,
  require_react_is as require_react_is2
} from "./chunk-L56CWL2Z.js";
import {
  es2015_exports,
  init_es2015,
  require_focusVisible,
  require_locale,
  require_overrides,
  require_react_is,
  require_styles
} from "./chunk-I2AV3WU6.js";
import "./chunk-ECVHEKMK.js";
import {
  require_react
} from "./chunk-QJTFJ6OV.js";
import {
  __commonJS,
  __esm,
  __export,
  __toCommonJS,
  __toESM
} from "./chunk-V4OQ3NZ2.js";

// node_modules/file-selector/dist/es5/file.js
function toFileWithPath(file, path) {
  var f = withMimeType(file);
  if (typeof f.path !== "string") {
    var webkitRelativePath = file.webkitRelativePath;
    Object.defineProperty(f, "path", {
      value: typeof path === "string" ? path : typeof webkitRelativePath === "string" && webkitRelativePath.length > 0 ? webkitRelativePath : file.name,
      writable: false,
      configurable: false,
      enumerable: true
    });
  }
  return f;
}
function withMimeType(file) {
  var name = file.name;
  var hasExtension = name && name.lastIndexOf(".") !== -1;
  if (hasExtension && !file.type) {
    var ext = name.split(".").pop().toLowerCase();
    var type = COMMON_MIME_TYPES.get(ext);
    if (type) {
      Object.defineProperty(file, "type", {
        value: type,
        writable: false,
        configurable: false,
        enumerable: true
      });
    }
  }
  return file;
}
var COMMON_MIME_TYPES;
var init_file = __esm({
  "node_modules/file-selector/dist/es5/file.js"() {
    COMMON_MIME_TYPES = /* @__PURE__ */ new Map([
      ["avi", "video/avi"],
      ["gif", "image/gif"],
      ["ico", "image/x-icon"],
      ["jpeg", "image/jpeg"],
      ["jpg", "image/jpeg"],
      ["mkv", "video/x-matroska"],
      ["mov", "video/quicktime"],
      ["mp4", "video/mp4"],
      ["pdf", "application/pdf"],
      ["png", "image/png"],
      ["zip", "application/zip"],
      ["doc", "application/msword"],
      ["docx", "application/vnd.openxmlformats-officedocument.wordprocessingml.document"]
    ]);
  }
});

// node_modules/file-selector/dist/es5/file-selector.js
function fromEvent(evt) {
  return __awaiter(this, void 0, void 0, function() {
    return __generator(this, function(_a) {
      return [2, isDragEvt(evt) && evt.dataTransfer ? getDataTransferFiles(evt.dataTransfer, evt.type) : getInputFiles(evt)];
    });
  });
}
function isDragEvt(value) {
  return !!value.dataTransfer;
}
function getInputFiles(evt) {
  var files = isInput(evt.target) ? evt.target.files ? fromList(evt.target.files) : [] : [];
  return files.map(function(file) {
    return toFileWithPath(file);
  });
}
function isInput(value) {
  return value !== null;
}
function getDataTransferFiles(dt, type) {
  return __awaiter(this, void 0, void 0, function() {
    var items, files;
    return __generator(this, function(_a) {
      switch (_a.label) {
        case 0:
          if (!dt.items) return [3, 2];
          items = fromList(dt.items).filter(function(item) {
            return item.kind === "file";
          });
          if (type !== "drop") {
            return [2, items];
          }
          return [4, Promise.all(items.map(toFilePromises))];
        case 1:
          files = _a.sent();
          return [2, noIgnoredFiles(flatten(files))];
        case 2:
          return [2, noIgnoredFiles(fromList(dt.files).map(function(file) {
            return toFileWithPath(file);
          }))];
      }
    });
  });
}
function noIgnoredFiles(files) {
  return files.filter(function(file) {
    return FILES_TO_IGNORE.indexOf(file.name) === -1;
  });
}
function fromList(items) {
  var files = [];
  for (var i = 0; i < items.length; i++) {
    var file = items[i];
    files.push(file);
  }
  return files;
}
function toFilePromises(item) {
  if (typeof item.webkitGetAsEntry !== "function") {
    return fromDataTransferItem(item);
  }
  var entry = item.webkitGetAsEntry();
  if (entry && entry.isDirectory) {
    return fromDirEntry(entry);
  }
  return fromDataTransferItem(item);
}
function flatten(items) {
  return items.reduce(function(acc, files) {
    return __spread(acc, Array.isArray(files) ? flatten(files) : [files]);
  }, []);
}
function fromDataTransferItem(item) {
  var file = item.getAsFile();
  if (!file) {
    return Promise.reject(item + " is not a File");
  }
  var fwp = toFileWithPath(file);
  return Promise.resolve(fwp);
}
function fromEntry(entry) {
  return __awaiter(this, void 0, void 0, function() {
    return __generator(this, function(_a) {
      return [2, entry.isDirectory ? fromDirEntry(entry) : fromFileEntry(entry)];
    });
  });
}
function fromDirEntry(entry) {
  var reader = entry.createReader();
  return new Promise(function(resolve, reject) {
    var entries = [];
    function readEntries() {
      var _this = this;
      reader.readEntries(function(batch) {
        return __awaiter(_this, void 0, void 0, function() {
          var files, err_1, items;
          return __generator(this, function(_a) {
            switch (_a.label) {
              case 0:
                if (!!batch.length) return [3, 5];
                _a.label = 1;
              case 1:
                _a.trys.push([1, 3, , 4]);
                return [4, Promise.all(entries)];
              case 2:
                files = _a.sent();
                resolve(files);
                return [3, 4];
              case 3:
                err_1 = _a.sent();
                reject(err_1);
                return [3, 4];
              case 4:
                return [3, 6];
              case 5:
                items = Promise.all(batch.map(fromEntry));
                entries.push(items);
                readEntries();
                _a.label = 6;
              case 6:
                return [
                  2
                  /*return*/
                ];
            }
          });
        });
      }, function(err) {
        reject(err);
      });
    }
    readEntries();
  });
}
function fromFileEntry(entry) {
  return __awaiter(this, void 0, void 0, function() {
    return __generator(this, function(_a) {
      return [2, new Promise(function(resolve, reject) {
        entry.file(function(file) {
          var fwp = toFileWithPath(file, entry.fullPath);
          resolve(fwp);
        }, function(err) {
          reject(err);
        });
      })];
    });
  });
}
var FILES_TO_IGNORE;
var init_file_selector = __esm({
  "node_modules/file-selector/dist/es5/file-selector.js"() {
    init_tslib_es6();
    init_file();
    FILES_TO_IGNORE = [
      // Thumbnail cache files for macOS and Windows
      ".DS_Store",
      "Thumbs.db"
      // Windows
    ];
  }
});

// node_modules/file-selector/dist/es5/index.js
var init_es5 = __esm({
  "node_modules/file-selector/dist/es5/index.js"() {
    init_file_selector();
  }
});

// node_modules/prop-types/factoryWithTypeCheckers.js
var require_factoryWithTypeCheckers = __commonJS({
  "node_modules/prop-types/factoryWithTypeCheckers.js"(exports, module) {
    "use strict";
    var ReactIs = require_react_is2();
    var assign = require_object_assign();
    var ReactPropTypesSecret = require_ReactPropTypesSecret();
    var has = require_has();
    var checkPropTypes = require_checkPropTypes();
    var printWarning = function() {
    };
    if (true) {
      printWarning = function(text) {
        var message = "Warning: " + text;
        if (typeof console !== "undefined") {
          console.error(message);
        }
        try {
          throw new Error(message);
        } catch (x) {
        }
      };
    }
    function emptyFunctionThatReturnsNull() {
      return null;
    }
    module.exports = function(isValidElement, throwOnDirectAccess) {
      var ITERATOR_SYMBOL = typeof Symbol === "function" && Symbol.iterator;
      var FAUX_ITERATOR_SYMBOL = "@@iterator";
      function getIteratorFn(maybeIterable) {
        var iteratorFn = maybeIterable && (ITERATOR_SYMBOL && maybeIterable[ITERATOR_SYMBOL] || maybeIterable[FAUX_ITERATOR_SYMBOL]);
        if (typeof iteratorFn === "function") {
          return iteratorFn;
        }
      }
      var ANONYMOUS = "<<anonymous>>";
      var ReactPropTypes = {
        array: createPrimitiveTypeChecker("array"),
        bigint: createPrimitiveTypeChecker("bigint"),
        bool: createPrimitiveTypeChecker("boolean"),
        func: createPrimitiveTypeChecker("function"),
        number: createPrimitiveTypeChecker("number"),
        object: createPrimitiveTypeChecker("object"),
        string: createPrimitiveTypeChecker("string"),
        symbol: createPrimitiveTypeChecker("symbol"),
        any: createAnyTypeChecker(),
        arrayOf: createArrayOfTypeChecker,
        element: createElementTypeChecker(),
        elementType: createElementTypeTypeChecker(),
        instanceOf: createInstanceTypeChecker,
        node: createNodeChecker(),
        objectOf: createObjectOfTypeChecker,
        oneOf: createEnumTypeChecker,
        oneOfType: createUnionTypeChecker,
        shape: createShapeTypeChecker,
        exact: createStrictShapeTypeChecker
      };
      function is(x, y) {
        if (x === y) {
          return x !== 0 || 1 / x === 1 / y;
        } else {
          return x !== x && y !== y;
        }
      }
      function PropTypeError(message, data) {
        this.message = message;
        this.data = data && typeof data === "object" ? data : {};
        this.stack = "";
      }
      PropTypeError.prototype = Error.prototype;
      function createChainableTypeChecker(validate) {
        if (true) {
          var manualPropTypeCallCache = {};
          var manualPropTypeWarningCount = 0;
        }
        function checkType(isRequired, props, propName, componentName, location, propFullName, secret) {
          componentName = componentName || ANONYMOUS;
          propFullName = propFullName || propName;
          if (secret !== ReactPropTypesSecret) {
            if (throwOnDirectAccess) {
              var err = new Error(
                "Calling PropTypes validators directly is not supported by the `prop-types` package. Use `PropTypes.checkPropTypes()` to call them. Read more at http://fb.me/use-check-prop-types"
              );
              err.name = "Invariant Violation";
              throw err;
            } else if (typeof console !== "undefined") {
              var cacheKey = componentName + ":" + propName;
              if (!manualPropTypeCallCache[cacheKey] && // Avoid spamming the console because they are often not actionable except for lib authors
              manualPropTypeWarningCount < 3) {
                printWarning(
                  "You are manually calling a React.PropTypes validation function for the `" + propFullName + "` prop on `" + componentName + "`. This is deprecated and will throw in the standalone `prop-types` package. You may be seeing this warning due to a third-party PropTypes library. See https://fb.me/react-warning-dont-call-proptypes for details."
                );
                manualPropTypeCallCache[cacheKey] = true;
                manualPropTypeWarningCount++;
              }
            }
          }
          if (props[propName] == null) {
            if (isRequired) {
              if (props[propName] === null) {
                return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required " + ("in `" + componentName + "`, but its value is `null`."));
              }
              return new PropTypeError("The " + location + " `" + propFullName + "` is marked as required in " + ("`" + componentName + "`, but its value is `undefined`."));
            }
            return null;
          } else {
            return validate(props, propName, componentName, location, propFullName);
          }
        }
        var chainedCheckType = checkType.bind(null, false);
        chainedCheckType.isRequired = checkType.bind(null, true);
        return chainedCheckType;
      }
      function createPrimitiveTypeChecker(expectedType) {
        function validate(props, propName, componentName, location, propFullName, secret) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== expectedType) {
            var preciseType = getPreciseType(propValue);
            return new PropTypeError(
              "Invalid " + location + " `" + propFullName + "` of type " + ("`" + preciseType + "` supplied to `" + componentName + "`, expected ") + ("`" + expectedType + "`."),
              { expectedType }
            );
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createAnyTypeChecker() {
        return createChainableTypeChecker(emptyFunctionThatReturnsNull);
      }
      function createArrayOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== "function") {
            return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside arrayOf.");
          }
          var propValue = props[propName];
          if (!Array.isArray(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an array."));
          }
          for (var i = 0; i < propValue.length; i++) {
            var error = typeChecker(propValue, i, componentName, location, propFullName + "[" + i + "]", ReactPropTypesSecret);
            if (error instanceof Error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createElementTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          if (!isValidElement(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createElementTypeTypeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          if (!ReactIs.isValidElementType(propValue)) {
            var propType = getPropType(propValue);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected a single ReactElement type."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createInstanceTypeChecker(expectedClass) {
        function validate(props, propName, componentName, location, propFullName) {
          if (!(props[propName] instanceof expectedClass)) {
            var expectedClassName = expectedClass.name || ANONYMOUS;
            var actualClassName = getClassName(props[propName]);
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + actualClassName + "` supplied to `" + componentName + "`, expected ") + ("instance of `" + expectedClassName + "`."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createEnumTypeChecker(expectedValues) {
        if (!Array.isArray(expectedValues)) {
          if (true) {
            if (arguments.length > 1) {
              printWarning(
                "Invalid arguments supplied to oneOf, expected an array, got " + arguments.length + " arguments. A common mistake is to write oneOf(x, y, z) instead of oneOf([x, y, z])."
              );
            } else {
              printWarning("Invalid argument supplied to oneOf, expected an array.");
            }
          }
          return emptyFunctionThatReturnsNull;
        }
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          for (var i = 0; i < expectedValues.length; i++) {
            if (is(propValue, expectedValues[i])) {
              return null;
            }
          }
          var valuesString = JSON.stringify(expectedValues, function replacer(key, value) {
            var type = getPreciseType(value);
            if (type === "symbol") {
              return String(value);
            }
            return value;
          });
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` of value `" + String(propValue) + "` " + ("supplied to `" + componentName + "`, expected one of " + valuesString + "."));
        }
        return createChainableTypeChecker(validate);
      }
      function createObjectOfTypeChecker(typeChecker) {
        function validate(props, propName, componentName, location, propFullName) {
          if (typeof typeChecker !== "function") {
            return new PropTypeError("Property `" + propFullName + "` of component `" + componentName + "` has invalid PropType notation inside objectOf.");
          }
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type " + ("`" + propType + "` supplied to `" + componentName + "`, expected an object."));
          }
          for (var key in propValue) {
            if (has(propValue, key)) {
              var error = typeChecker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
              if (error instanceof Error) {
                return error;
              }
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createUnionTypeChecker(arrayOfTypeCheckers) {
        if (!Array.isArray(arrayOfTypeCheckers)) {
          true ? printWarning("Invalid argument supplied to oneOfType, expected an instance of array.") : void 0;
          return emptyFunctionThatReturnsNull;
        }
        for (var i = 0; i < arrayOfTypeCheckers.length; i++) {
          var checker = arrayOfTypeCheckers[i];
          if (typeof checker !== "function") {
            printWarning(
              "Invalid argument supplied to oneOfType. Expected an array of check functions, but received " + getPostfixForTypeWarning(checker) + " at index " + i + "."
            );
            return emptyFunctionThatReturnsNull;
          }
        }
        function validate(props, propName, componentName, location, propFullName) {
          var expectedTypes = [];
          for (var i2 = 0; i2 < arrayOfTypeCheckers.length; i2++) {
            var checker2 = arrayOfTypeCheckers[i2];
            var checkerResult = checker2(props, propName, componentName, location, propFullName, ReactPropTypesSecret);
            if (checkerResult == null) {
              return null;
            }
            if (checkerResult.data && has(checkerResult.data, "expectedType")) {
              expectedTypes.push(checkerResult.data.expectedType);
            }
          }
          var expectedTypesMessage = expectedTypes.length > 0 ? ", expected one of type [" + expectedTypes.join(", ") + "]" : "";
          return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`" + expectedTypesMessage + "."));
        }
        return createChainableTypeChecker(validate);
      }
      function createNodeChecker() {
        function validate(props, propName, componentName, location, propFullName) {
          if (!isNode(props[propName])) {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` supplied to " + ("`" + componentName + "`, expected a ReactNode."));
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function invalidValidatorError(componentName, location, propFullName, key, type) {
        return new PropTypeError(
          (componentName || "React class") + ": " + location + " type `" + propFullName + "." + key + "` is invalid; it must be a function, usually from the `prop-types` package, but received `" + type + "`."
        );
      }
      function createShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
          }
          for (var key in shapeTypes) {
            var checker = shapeTypes[key];
            if (typeof checker !== "function") {
              return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
            }
            var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
            if (error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function createStrictShapeTypeChecker(shapeTypes) {
        function validate(props, propName, componentName, location, propFullName) {
          var propValue = props[propName];
          var propType = getPropType(propValue);
          if (propType !== "object") {
            return new PropTypeError("Invalid " + location + " `" + propFullName + "` of type `" + propType + "` " + ("supplied to `" + componentName + "`, expected `object`."));
          }
          var allKeys = assign({}, props[propName], shapeTypes);
          for (var key in allKeys) {
            var checker = shapeTypes[key];
            if (has(shapeTypes, key) && typeof checker !== "function") {
              return invalidValidatorError(componentName, location, propFullName, key, getPreciseType(checker));
            }
            if (!checker) {
              return new PropTypeError(
                "Invalid " + location + " `" + propFullName + "` key `" + key + "` supplied to `" + componentName + "`.\nBad object: " + JSON.stringify(props[propName], null, "  ") + "\nValid keys: " + JSON.stringify(Object.keys(shapeTypes), null, "  ")
              );
            }
            var error = checker(propValue, key, componentName, location, propFullName + "." + key, ReactPropTypesSecret);
            if (error) {
              return error;
            }
          }
          return null;
        }
        return createChainableTypeChecker(validate);
      }
      function isNode(propValue) {
        switch (typeof propValue) {
          case "number":
          case "string":
          case "undefined":
            return true;
          case "boolean":
            return !propValue;
          case "object":
            if (Array.isArray(propValue)) {
              return propValue.every(isNode);
            }
            if (propValue === null || isValidElement(propValue)) {
              return true;
            }
            var iteratorFn = getIteratorFn(propValue);
            if (iteratorFn) {
              var iterator = iteratorFn.call(propValue);
              var step;
              if (iteratorFn !== propValue.entries) {
                while (!(step = iterator.next()).done) {
                  if (!isNode(step.value)) {
                    return false;
                  }
                }
              } else {
                while (!(step = iterator.next()).done) {
                  var entry = step.value;
                  if (entry) {
                    if (!isNode(entry[1])) {
                      return false;
                    }
                  }
                }
              }
            } else {
              return false;
            }
            return true;
          default:
            return false;
        }
      }
      function isSymbol(propType, propValue) {
        if (propType === "symbol") {
          return true;
        }
        if (!propValue) {
          return false;
        }
        if (propValue["@@toStringTag"] === "Symbol") {
          return true;
        }
        if (typeof Symbol === "function" && propValue instanceof Symbol) {
          return true;
        }
        return false;
      }
      function getPropType(propValue) {
        var propType = typeof propValue;
        if (Array.isArray(propValue)) {
          return "array";
        }
        if (propValue instanceof RegExp) {
          return "object";
        }
        if (isSymbol(propType, propValue)) {
          return "symbol";
        }
        return propType;
      }
      function getPreciseType(propValue) {
        if (typeof propValue === "undefined" || propValue === null) {
          return "" + propValue;
        }
        var propType = getPropType(propValue);
        if (propType === "object") {
          if (propValue instanceof Date) {
            return "date";
          } else if (propValue instanceof RegExp) {
            return "regexp";
          }
        }
        return propType;
      }
      function getPostfixForTypeWarning(value) {
        var type = getPreciseType(value);
        switch (type) {
          case "array":
          case "object":
            return "an " + type;
          case "boolean":
          case "date":
          case "regexp":
            return "a " + type;
          default:
            return type;
        }
      }
      function getClassName(propValue) {
        if (!propValue.constructor || !propValue.constructor.name) {
          return ANONYMOUS;
        }
        return propValue.constructor.name;
      }
      ReactPropTypes.checkPropTypes = checkPropTypes;
      ReactPropTypes.resetWarningCache = checkPropTypes.resetWarningCache;
      ReactPropTypes.PropTypes = ReactPropTypes;
      return ReactPropTypes;
    };
  }
});

// node_modules/prop-types/index.js
var require_prop_types = __commonJS({
  "node_modules/prop-types/index.js"(exports, module) {
    if (true) {
      ReactIs = require_react_is2();
      throwOnDirectAccess = true;
      module.exports = require_factoryWithTypeCheckers()(ReactIs.isElement, throwOnDirectAccess);
    } else {
      module.exports = null();
    }
    var ReactIs;
    var throwOnDirectAccess;
  }
});

// node_modules/attr-accept/dist/index.js
var require_dist = __commonJS({
  "node_modules/attr-accept/dist/index.js"(exports, module) {
    module.exports = (function(t) {
      function n(e) {
        if (r[e]) return r[e].exports;
        var o = r[e] = { i: e, l: false, exports: {} };
        return t[e].call(o.exports, o, o.exports, n), o.l = true, o.exports;
      }
      var r = {};
      return n.m = t, n.c = r, n.d = function(t2, r2, e) {
        n.o(t2, r2) || Object.defineProperty(t2, r2, { configurable: false, enumerable: true, get: e });
      }, n.n = function(t2) {
        var r2 = t2 && t2.__esModule ? function() {
          return t2.default;
        } : function() {
          return t2;
        };
        return n.d(r2, "a", r2), r2;
      }, n.o = function(t2, n2) {
        return Object.prototype.hasOwnProperty.call(t2, n2);
      }, n.p = "", n(n.s = 13);
    })([function(t, n) {
      var r = t.exports = "undefined" != typeof window && window.Math == Math ? window : "undefined" != typeof self && self.Math == Math ? self : Function("return this")();
      "number" == typeof __g && (__g = r);
    }, function(t, n) {
      t.exports = function(t2) {
        return "object" == typeof t2 ? null !== t2 : "function" == typeof t2;
      };
    }, function(t, n) {
      var r = t.exports = { version: "2.5.0" };
      "number" == typeof __e && (__e = r);
    }, function(t, n, r) {
      t.exports = !r(4)(function() {
        return 7 != Object.defineProperty({}, "a", { get: function() {
          return 7;
        } }).a;
      });
    }, function(t, n) {
      t.exports = function(t2) {
        try {
          return !!t2();
        } catch (t3) {
          return true;
        }
      };
    }, function(t, n) {
      var r = {}.toString;
      t.exports = function(t2) {
        return r.call(t2).slice(8, -1);
      };
    }, function(t, n, r) {
      var e = r(32)("wks"), o = r(9), i = r(0).Symbol, u = "function" == typeof i;
      (t.exports = function(t2) {
        return e[t2] || (e[t2] = u && i[t2] || (u ? i : o)("Symbol." + t2));
      }).store = e;
    }, function(t, n, r) {
      var e = r(0), o = r(2), i = r(8), u = r(22), c = r(10), f = function(t2, n2, r2) {
        var a, s, p, l, v = t2 & f.F, y = t2 & f.G, h = t2 & f.S, d = t2 & f.P, x = t2 & f.B, g = y ? e : h ? e[n2] || (e[n2] = {}) : (e[n2] || {}).prototype, m = y ? o : o[n2] || (o[n2] = {}), b = m.prototype || (m.prototype = {});
        y && (r2 = n2);
        for (a in r2) s = !v && g && void 0 !== g[a], p = (s ? g : r2)[a], l = x && s ? c(p, e) : d && "function" == typeof p ? c(Function.call, p) : p, g && u(g, a, p, t2 & f.U), m[a] != p && i(m, a, l), d && b[a] != p && (b[a] = p);
      };
      e.core = o, f.F = 1, f.G = 2, f.S = 4, f.P = 8, f.B = 16, f.W = 32, f.U = 64, f.R = 128, t.exports = f;
    }, function(t, n, r) {
      var e = r(16), o = r(21);
      t.exports = r(3) ? function(t2, n2, r2) {
        return e.f(t2, n2, o(1, r2));
      } : function(t2, n2, r2) {
        return t2[n2] = r2, t2;
      };
    }, function(t, n) {
      var r = 0, e = Math.random();
      t.exports = function(t2) {
        return "Symbol(".concat(void 0 === t2 ? "" : t2, ")_", (++r + e).toString(36));
      };
    }, function(t, n, r) {
      var e = r(24);
      t.exports = function(t2, n2, r2) {
        if (e(t2), void 0 === n2) return t2;
        switch (r2) {
          case 1:
            return function(r3) {
              return t2.call(n2, r3);
            };
          case 2:
            return function(r3, e2) {
              return t2.call(n2, r3, e2);
            };
          case 3:
            return function(r3, e2, o) {
              return t2.call(n2, r3, e2, o);
            };
        }
        return function() {
          return t2.apply(n2, arguments);
        };
      };
    }, function(t, n) {
      t.exports = function(t2) {
        if (void 0 == t2) throw TypeError("Can't call method on  " + t2);
        return t2;
      };
    }, function(t, n, r) {
      var e = r(28), o = Math.min;
      t.exports = function(t2) {
        return t2 > 0 ? o(e(t2), 9007199254740991) : 0;
      };
    }, function(t, n, r) {
      "use strict";
      n.__esModule = true, n.default = function(t2, n2) {
        if (t2 && n2) {
          var r2 = Array.isArray(n2) ? n2 : n2.split(","), e = t2.name || "", o = t2.type || "", i = o.replace(/\/.*$/, "");
          return r2.some(function(t3) {
            var n3 = t3.trim();
            return "." === n3.charAt(0) ? e.toLowerCase().endsWith(n3.toLowerCase()) : n3.endsWith("/*") ? i === n3.replace(/\/.*$/, "") : o === n3;
          });
        }
        return true;
      }, r(14), r(34);
    }, function(t, n, r) {
      r(15), t.exports = r(2).Array.some;
    }, function(t, n, r) {
      "use strict";
      var e = r(7), o = r(25)(3);
      e(e.P + e.F * !r(33)([].some, true), "Array", { some: function(t2) {
        return o(this, t2, arguments[1]);
      } });
    }, function(t, n, r) {
      var e = r(17), o = r(18), i = r(20), u = Object.defineProperty;
      n.f = r(3) ? Object.defineProperty : function(t2, n2, r2) {
        if (e(t2), n2 = i(n2, true), e(r2), o) try {
          return u(t2, n2, r2);
        } catch (t3) {
        }
        if ("get" in r2 || "set" in r2) throw TypeError("Accessors not supported!");
        return "value" in r2 && (t2[n2] = r2.value), t2;
      };
    }, function(t, n, r) {
      var e = r(1);
      t.exports = function(t2) {
        if (!e(t2)) throw TypeError(t2 + " is not an object!");
        return t2;
      };
    }, function(t, n, r) {
      t.exports = !r(3) && !r(4)(function() {
        return 7 != Object.defineProperty(r(19)("div"), "a", { get: function() {
          return 7;
        } }).a;
      });
    }, function(t, n, r) {
      var e = r(1), o = r(0).document, i = e(o) && e(o.createElement);
      t.exports = function(t2) {
        return i ? o.createElement(t2) : {};
      };
    }, function(t, n, r) {
      var e = r(1);
      t.exports = function(t2, n2) {
        if (!e(t2)) return t2;
        var r2, o;
        if (n2 && "function" == typeof (r2 = t2.toString) && !e(o = r2.call(t2))) return o;
        if ("function" == typeof (r2 = t2.valueOf) && !e(o = r2.call(t2))) return o;
        if (!n2 && "function" == typeof (r2 = t2.toString) && !e(o = r2.call(t2))) return o;
        throw TypeError("Can't convert object to primitive value");
      };
    }, function(t, n) {
      t.exports = function(t2, n2) {
        return { enumerable: !(1 & t2), configurable: !(2 & t2), writable: !(4 & t2), value: n2 };
      };
    }, function(t, n, r) {
      var e = r(0), o = r(8), i = r(23), u = r(9)("src"), c = Function.toString, f = ("" + c).split("toString");
      r(2).inspectSource = function(t2) {
        return c.call(t2);
      }, (t.exports = function(t2, n2, r2, c2) {
        var a = "function" == typeof r2;
        a && (i(r2, "name") || o(r2, "name", n2)), t2[n2] !== r2 && (a && (i(r2, u) || o(r2, u, t2[n2] ? "" + t2[n2] : f.join(String(n2)))), t2 === e ? t2[n2] = r2 : c2 ? t2[n2] ? t2[n2] = r2 : o(t2, n2, r2) : (delete t2[n2], o(t2, n2, r2)));
      })(Function.prototype, "toString", function() {
        return "function" == typeof this && this[u] || c.call(this);
      });
    }, function(t, n) {
      var r = {}.hasOwnProperty;
      t.exports = function(t2, n2) {
        return r.call(t2, n2);
      };
    }, function(t, n) {
      t.exports = function(t2) {
        if ("function" != typeof t2) throw TypeError(t2 + " is not a function!");
        return t2;
      };
    }, function(t, n, r) {
      var e = r(10), o = r(26), i = r(27), u = r(12), c = r(29);
      t.exports = function(t2, n2) {
        var r2 = 1 == t2, f = 2 == t2, a = 3 == t2, s = 4 == t2, p = 6 == t2, l = 5 == t2 || p, v = n2 || c;
        return function(n3, c2, y) {
          for (var h, d, x = i(n3), g = o(x), m = e(c2, y, 3), b = u(g.length), _ = 0, w = r2 ? v(n3, b) : f ? v(n3, 0) : void 0; b > _; _++) if ((l || _ in g) && (h = g[_], d = m(h, _, x), t2)) {
            if (r2) w[_] = d;
            else if (d) switch (t2) {
              case 3:
                return true;
              case 5:
                return h;
              case 6:
                return _;
              case 2:
                w.push(h);
            }
            else if (s) return false;
          }
          return p ? -1 : a || s ? s : w;
        };
      };
    }, function(t, n, r) {
      var e = r(5);
      t.exports = Object("z").propertyIsEnumerable(0) ? Object : function(t2) {
        return "String" == e(t2) ? t2.split("") : Object(t2);
      };
    }, function(t, n, r) {
      var e = r(11);
      t.exports = function(t2) {
        return Object(e(t2));
      };
    }, function(t, n) {
      var r = Math.ceil, e = Math.floor;
      t.exports = function(t2) {
        return isNaN(t2 = +t2) ? 0 : (t2 > 0 ? e : r)(t2);
      };
    }, function(t, n, r) {
      var e = r(30);
      t.exports = function(t2, n2) {
        return new (e(t2))(n2);
      };
    }, function(t, n, r) {
      var e = r(1), o = r(31), i = r(6)("species");
      t.exports = function(t2) {
        var n2;
        return o(t2) && (n2 = t2.constructor, "function" != typeof n2 || n2 !== Array && !o(n2.prototype) || (n2 = void 0), e(n2) && null === (n2 = n2[i]) && (n2 = void 0)), void 0 === n2 ? Array : n2;
      };
    }, function(t, n, r) {
      var e = r(5);
      t.exports = Array.isArray || function(t2) {
        return "Array" == e(t2);
      };
    }, function(t, n, r) {
      var e = r(0), o = e["__core-js_shared__"] || (e["__core-js_shared__"] = {});
      t.exports = function(t2) {
        return o[t2] || (o[t2] = {});
      };
    }, function(t, n, r) {
      "use strict";
      var e = r(4);
      t.exports = function(t2, n2) {
        return !!t2 && e(function() {
          n2 ? t2.call(null, function() {
          }, 1) : t2.call(null);
        });
      };
    }, function(t, n, r) {
      r(35), t.exports = r(2).String.endsWith;
    }, function(t, n, r) {
      "use strict";
      var e = r(7), o = r(12), i = r(36), u = "".endsWith;
      e(e.P + e.F * r(38)("endsWith"), "String", { endsWith: function(t2) {
        var n2 = i(this, t2, "endsWith"), r2 = arguments.length > 1 ? arguments[1] : void 0, e2 = o(n2.length), c = void 0 === r2 ? e2 : Math.min(o(r2), e2), f = String(t2);
        return u ? u.call(n2, f, c) : n2.slice(c - f.length, c) === f;
      } });
    }, function(t, n, r) {
      var e = r(37), o = r(11);
      t.exports = function(t2, n2, r2) {
        if (e(n2)) throw TypeError("String#" + r2 + " doesn't accept regex!");
        return String(o(t2));
      };
    }, function(t, n, r) {
      var e = r(1), o = r(5), i = r(6)("match");
      t.exports = function(t2) {
        var n2;
        return e(t2) && (void 0 !== (n2 = t2[i]) ? !!n2 : "RegExp" == o(t2));
      };
    }, function(t, n, r) {
      var e = r(6)("match");
      t.exports = function(t2) {
        var n2 = /./;
        try {
          "/./"[t2](n2);
        } catch (r2) {
          try {
            return n2[e] = false, !"/./"[t2](n2);
          } catch (t3) {
          }
        }
        return true;
      };
    }]);
  }
});

// node_modules/react-dropzone/dist/es/utils/index.js
function fileAccepted(file, accept) {
  return file.type === "application/x-moz-file" || (0, import_attr_accept.default)(file, accept);
}
function fileMatchSize(file, maxSize, minSize) {
  return file.size <= maxSize && file.size >= minSize;
}
function allFilesAccepted(files, accept) {
  return files.every(function(file) {
    return fileAccepted(file, accept);
  });
}
function isPropagationStopped(evt) {
  if (typeof evt.isPropagationStopped === "function") {
    return evt.isPropagationStopped();
  } else if (typeof evt.cancelBubble !== "undefined") {
    return evt.cancelBubble;
  }
  return false;
}
function isDefaultPrevented(evt) {
  if (typeof evt.defaultPrevented !== "undefined") {
    return evt.defaultPrevented;
  } else if (typeof evt.isDefaultPrevented === "function") {
    return evt.isDefaultPrevented();
  }
  return false;
}
function isDragDataWithFiles(evt) {
  if (!evt.dataTransfer) {
    return true;
  }
  return Array.prototype.some.call(evt.dataTransfer.types, function(type) {
    return type === "Files" || type === "application/x-moz-file";
  });
}
function onDocumentDragOver(evt) {
  evt.preventDefault();
}
function isIe(userAgent) {
  return userAgent.indexOf("MSIE") !== -1 || userAgent.indexOf("Trident/") !== -1;
}
function isEdge(userAgent) {
  return userAgent.indexOf("Edge/") !== -1;
}
function isIeOrEdge() {
  var userAgent = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : window.navigator.userAgent;
  return isIe(userAgent) || isEdge(userAgent);
}
function composeEventHandlers() {
  for (var _len = arguments.length, fns = Array(_len), _key = 0; _key < _len; _key++) {
    fns[_key] = arguments[_key];
  }
  return function(event) {
    for (var _len2 = arguments.length, args = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {
      args[_key2 - 1] = arguments[_key2];
    }
    return fns.some(function(fn) {
      fn && fn.apply(void 0, [event].concat(args));
      return event.defaultPrevented;
    });
  };
}
var import_attr_accept, supportMultiple;
var init_utils = __esm({
  "node_modules/react-dropzone/dist/es/utils/index.js"() {
    import_attr_accept = __toESM(require_dist());
    supportMultiple = typeof document !== "undefined" && document && document.createElement ? "multiple" in document.createElement("input") : true;
  }
});

// node_modules/react-dropzone/dist/es/index.js
var es_exports = {};
__export(es_exports, {
  default: () => es_default
});
function _defineProperty(obj, key, value) {
  if (key in obj) {
    Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
  } else {
    obj[key] = value;
  }
  return obj;
}
function _objectWithoutProperties(obj, keys) {
  var target = {};
  for (var i in obj) {
    if (keys.indexOf(i) >= 0) continue;
    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;
    target[i] = obj[i];
  }
  return target;
}
function _toConsumableArray(arr) {
  if (Array.isArray(arr)) {
    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {
      arr2[i] = arr[i];
    }
    return arr2;
  } else {
    return Array.from(arr);
  }
}
function _classCallCheck(instance, Constructor) {
  if (!(instance instanceof Constructor)) {
    throw new TypeError("Cannot call a class as a function");
  }
}
function _possibleConstructorReturn(self2, call) {
  if (!self2) {
    throw new ReferenceError("this hasn't been initialised - super() hasn't been called");
  }
  return call && (typeof call === "object" || typeof call === "function") ? call : self2;
}
function _inherits(subClass, superClass) {
  if (typeof superClass !== "function" && superClass !== null) {
    throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);
  }
  subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });
  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;
}
var import_react, import_prop_types, _extends, _createClass, Dropzone, es_default;
var init_es = __esm({
  "node_modules/react-dropzone/dist/es/index.js"() {
    import_react = __toESM(require_react());
    init_es5();
    import_prop_types = __toESM(require_prop_types());
    init_utils();
    _extends = Object.assign || function(target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];
        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }
      return target;
    };
    _createClass = /* @__PURE__ */ (function() {
      function defineProperties(target, props) {
        for (var i = 0; i < props.length; i++) {
          var descriptor = props[i];
          descriptor.enumerable = descriptor.enumerable || false;
          descriptor.configurable = true;
          if ("value" in descriptor) descriptor.writable = true;
          Object.defineProperty(target, descriptor.key, descriptor);
        }
      }
      return function(Constructor, protoProps, staticProps) {
        if (protoProps) defineProperties(Constructor.prototype, protoProps);
        if (staticProps) defineProperties(Constructor, staticProps);
        return Constructor;
      };
    })();
    Dropzone = (function(_React$Component) {
      _inherits(Dropzone2, _React$Component);
      function Dropzone2() {
        var _ref;
        var _temp, _this, _ret;
        _classCallCheck(this, Dropzone2);
        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
          args[_key] = arguments[_key];
        }
        return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = Dropzone2.__proto__ || Object.getPrototypeOf(Dropzone2)).call.apply(_ref, [this].concat(args))), _this), _this.state = {
          draggedFiles: [],
          acceptedFiles: [],
          rejectedFiles: []
        }, _this.isFileDialogActive = false, _this.onDocumentDrop = function(evt) {
          if (_this.node && _this.node.contains(evt.target)) {
            return;
          }
          evt.preventDefault();
          _this.dragTargets = [];
        }, _this.onDragStart = function(evt) {
          evt.persist();
          if (_this.props.onDragStart && isDragDataWithFiles(evt)) {
            _this.props.onDragStart.call(_this, evt);
          }
        }, _this.onDragEnter = function(evt) {
          evt.preventDefault();
          if (_this.dragTargets.indexOf(evt.target) === -1) {
            _this.dragTargets.push(evt.target);
          }
          evt.persist();
          if (isDragDataWithFiles(evt)) {
            Promise.resolve(_this.props.getDataTransferItems(evt)).then(function(draggedFiles) {
              if (isPropagationStopped(evt)) {
                return;
              }
              _this.setState({
                draggedFiles,
                // Do not rely on files for the drag state. It doesn't work in Safari.
                isDragActive: true
              });
            });
            if (_this.props.onDragEnter) {
              _this.props.onDragEnter.call(_this, evt);
            }
          }
        }, _this.onDragOver = function(evt) {
          evt.preventDefault();
          evt.persist();
          if (evt.dataTransfer) {
            evt.dataTransfer.dropEffect = "copy";
          }
          if (_this.props.onDragOver && isDragDataWithFiles(evt)) {
            _this.props.onDragOver.call(_this, evt);
          }
          return false;
        }, _this.onDragLeave = function(evt) {
          evt.preventDefault();
          evt.persist();
          _this.dragTargets = _this.dragTargets.filter(function(el) {
            return el !== evt.target && _this.node.contains(el);
          });
          if (_this.dragTargets.length > 0) {
            return;
          }
          _this.setState({
            isDragActive: false,
            draggedFiles: []
          });
          if (_this.props.onDragLeave && isDragDataWithFiles(evt)) {
            _this.props.onDragLeave.call(_this, evt);
          }
        }, _this.onDrop = function(evt) {
          var _this$props = _this.props, onDrop = _this$props.onDrop, onDropAccepted = _this$props.onDropAccepted, onDropRejected = _this$props.onDropRejected, multiple = _this$props.multiple, accept = _this$props.accept, getDataTransferItems = _this$props.getDataTransferItems;
          evt.preventDefault();
          evt.persist();
          _this.dragTargets = [];
          _this.isFileDialogActive = false;
          _this.draggedFiles = null;
          _this.setState({
            isDragActive: false,
            draggedFiles: []
          });
          if (isDragDataWithFiles(evt)) {
            Promise.resolve(getDataTransferItems(evt)).then(function(fileList) {
              var acceptedFiles = [];
              var rejectedFiles = [];
              if (isPropagationStopped(evt)) {
                return;
              }
              fileList.forEach(function(file) {
                if (fileAccepted(file, accept) && fileMatchSize(file, _this.props.maxSize, _this.props.minSize)) {
                  acceptedFiles.push(file);
                } else {
                  rejectedFiles.push(file);
                }
              });
              if (!multiple && acceptedFiles.length > 1) {
                rejectedFiles.push.apply(rejectedFiles, _toConsumableArray(acceptedFiles.splice(0)));
              }
              _this.setState({ acceptedFiles, rejectedFiles }, function() {
                if (onDrop) {
                  onDrop.call(_this, acceptedFiles, rejectedFiles, evt);
                }
                if (rejectedFiles.length > 0 && onDropRejected) {
                  onDropRejected.call(_this, rejectedFiles, evt);
                }
                if (acceptedFiles.length > 0 && onDropAccepted) {
                  onDropAccepted.call(_this, acceptedFiles, evt);
                }
              });
            });
          }
        }, _this.onClick = function(evt) {
          var onClick = _this.props.onClick;
          if (onClick) {
            onClick.call(_this, evt);
          }
          if (!isDefaultPrevented(evt)) {
            evt.stopPropagation();
            if (isIeOrEdge()) {
              setTimeout(_this.open, 0);
            } else {
              _this.open();
            }
          }
        }, _this.onInputElementClick = function(evt) {
          evt.stopPropagation();
        }, _this.onFileDialogCancel = function() {
          var onFileDialogCancel = _this.props.onFileDialogCancel;
          if (_this.isFileDialogActive) {
            setTimeout(function() {
              if (_this.input != null) {
                var files = _this.input.files;
                if (!files.length) {
                  _this.isFileDialogActive = false;
                  if (typeof onFileDialogCancel === "function") {
                    onFileDialogCancel();
                  }
                }
              }
            }, 300);
          }
        }, _this.onFocus = function(evt) {
          var onFocus = _this.props.onFocus;
          if (onFocus) {
            onFocus.call(_this, evt);
          }
          if (!isDefaultPrevented(evt)) {
            _this.setState({ isFocused: true });
          }
        }, _this.onBlur = function(evt) {
          var onBlur = _this.props.onBlur;
          if (onBlur) {
            onBlur.call(_this, evt);
          }
          if (!isDefaultPrevented(evt)) {
            _this.setState({ isFocused: false });
          }
        }, _this.onKeyDown = function(evt) {
          var onKeyDown = _this.props.onKeyDown;
          if (!_this.node.isEqualNode(evt.target)) {
            return;
          }
          if (onKeyDown) {
            onKeyDown.call(_this, evt);
          }
          if (!isDefaultPrevented(evt) && (evt.keyCode === 32 || evt.keyCode === 13)) {
            evt.preventDefault();
            _this.open();
          }
        }, _this.composeHandler = function(handler) {
          if (_this.props.disabled) {
            return null;
          }
          return handler;
        }, _this.getRootProps = function() {
          var _extends2;
          var _ref2 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
          var _ref2$refKey = _ref2.refKey, refKey = _ref2$refKey === void 0 ? "ref" : _ref2$refKey, onKeyDown = _ref2.onKeyDown, onFocus = _ref2.onFocus, onBlur = _ref2.onBlur, onClick = _ref2.onClick, onDragStart = _ref2.onDragStart, onDragEnter = _ref2.onDragEnter, onDragOver = _ref2.onDragOver, onDragLeave = _ref2.onDragLeave, onDrop = _ref2.onDrop, rest = _objectWithoutProperties(_ref2, ["refKey", "onKeyDown", "onFocus", "onBlur", "onClick", "onDragStart", "onDragEnter", "onDragOver", "onDragLeave", "onDrop"]);
          return _extends((_extends2 = {
            onKeyDown: _this.composeHandler(onKeyDown ? composeEventHandlers(onKeyDown, _this.onKeyDown) : _this.onKeyDown),
            onFocus: _this.composeHandler(onFocus ? composeEventHandlers(onFocus, _this.onFocus) : _this.onFocus),
            onBlur: _this.composeHandler(onBlur ? composeEventHandlers(onBlur, _this.onBlur) : _this.onBlur),
            onClick: _this.composeHandler(onClick ? composeEventHandlers(onClick, _this.onClick) : _this.onClick),
            onDragStart: _this.composeHandler(onDragStart ? composeEventHandlers(onDragStart, _this.onDragStart) : _this.onDragStart),
            onDragEnter: _this.composeHandler(onDragEnter ? composeEventHandlers(onDragEnter, _this.onDragEnter) : _this.onDragEnter),
            onDragOver: _this.composeHandler(onDragOver ? composeEventHandlers(onDragOver, _this.onDragOver) : _this.onDragOver),
            onDragLeave: _this.composeHandler(onDragLeave ? composeEventHandlers(onDragLeave, _this.onDragLeave) : _this.onDragLeave),
            onDrop: _this.composeHandler(onDrop ? composeEventHandlers(onDrop, _this.onDrop) : _this.onDrop)
          }, _defineProperty(_extends2, refKey, _this.setNodeRef), _defineProperty(_extends2, "tabIndex", _this.props.disabled ? -1 : 0), _extends2), rest);
        }, _this.getInputProps = function() {
          var _ref3 = arguments.length > 0 && arguments[0] !== void 0 ? arguments[0] : {};
          var _ref3$refKey = _ref3.refKey, refKey = _ref3$refKey === void 0 ? "ref" : _ref3$refKey, onChange = _ref3.onChange, onClick = _ref3.onClick, rest = _objectWithoutProperties(_ref3, ["refKey", "onChange", "onClick"]);
          var _this$props2 = _this.props, accept = _this$props2.accept, multiple = _this$props2.multiple, name = _this$props2.name;
          var inputProps = _defineProperty({
            accept,
            type: "file",
            style: { display: "none" },
            multiple: supportMultiple && multiple,
            onChange: composeEventHandlers(onChange, _this.onDrop),
            onClick: composeEventHandlers(onClick, _this.onInputElementClick),
            autoComplete: "off",
            tabIndex: -1
          }, refKey, _this.setInputRef);
          if (name && name.length) {
            inputProps.name = name;
          }
          return _extends({}, inputProps, rest);
        }, _this.setNodeRef = function(node) {
          _this.node = node;
        }, _this.setInputRef = function(input) {
          _this.input = input;
        }, _this.open = function() {
          _this.isFileDialogActive = true;
          if (_this.input) {
            _this.input.value = null;
            _this.input.click();
          }
        }, _temp), _possibleConstructorReturn(_this, _ret);
      }
      _createClass(Dropzone2, [{
        key: "componentDidMount",
        value: function componentDidMount() {
          var preventDropOnDocument = this.props.preventDropOnDocument;
          this.dragTargets = [];
          if (preventDropOnDocument) {
            document.addEventListener("dragover", onDocumentDragOver, false);
            document.addEventListener("drop", this.onDocumentDrop, false);
          }
          window.addEventListener("focus", this.onFileDialogCancel, false);
        }
      }, {
        key: "componentWillUnmount",
        value: function componentWillUnmount() {
          var preventDropOnDocument = this.props.preventDropOnDocument;
          if (preventDropOnDocument) {
            document.removeEventListener("dragover", onDocumentDragOver);
            document.removeEventListener("drop", this.onDocumentDrop);
          }
          window.removeEventListener("focus", this.onFileDialogCancel, false);
        }
        /**
         * Open system file upload dialog.
         *
         * @public
         */
      }, {
        key: "render",
        value: function render() {
          var _props = this.props, children = _props.children, multiple = _props.multiple, disabled = _props.disabled;
          var _state = this.state, isDragActive = _state.isDragActive, isFocused = _state.isFocused, draggedFiles = _state.draggedFiles, acceptedFiles = _state.acceptedFiles, rejectedFiles = _state.rejectedFiles;
          var filesCount = draggedFiles.length;
          var isMultipleAllowed = multiple || filesCount <= 1;
          var isDragAccept = filesCount > 0 && allFilesAccepted(draggedFiles, this.props.accept);
          var isDragReject = filesCount > 0 && (!isDragAccept || !isMultipleAllowed);
          return children({
            isDragActive,
            isDragAccept,
            isDragReject,
            draggedFiles,
            acceptedFiles,
            rejectedFiles,
            isFocused: isFocused && !disabled,
            getRootProps: this.getRootProps,
            getInputProps: this.getInputProps,
            open: this.open
          });
        }
      }]);
      return Dropzone2;
    })(import_react.default.Component);
    es_default = Dropzone;
    Dropzone.propTypes = {
      /**
       * Allow specific types of files. See https://github.com/okonet/attr-accept for more information.
       * Keep in mind that mime type determination is not reliable across platforms. CSV files,
       * for example, are reported as text/plain under macOS but as application/vnd.ms-excel under
       * Windows. In some cases there might not be a mime type set at all.
       * See: https://github.com/react-dropzone/react-dropzone/issues/276
       */
      accept: import_prop_types.default.oneOfType([import_prop_types.default.string, import_prop_types.default.arrayOf(import_prop_types.default.string)]),
      /**
       * Render function that renders the actual component
       *
       * @param {Object} props
       * @param {Function} props.getRootProps Returns the props you should apply to the root drop container you render
       * @param {Function} props.getInputProps Returns the props you should apply to hidden file input you render
       * @param {Function} props.open Open the native file selection dialog
       * @param {Boolean} props.isFocused Dropzone area is in focus
       * @param {Boolean} props.isDragActive Active drag is in progress
       * @param {Boolean} props.isDragAccept Dragged files are accepted
       * @param {Boolean} props.isDragReject Some dragged files are rejected
       * @param {Array} props.draggedFiles Files in active drag
       * @param {Array} props.acceptedFiles Accepted files
       * @param {Array} props.rejectedFiles Rejected files
       */
      children: import_prop_types.default.func,
      /**
       * Enable/disable the dropzone entirely
       */
      disabled: import_prop_types.default.bool,
      /**
       * If false, allow dropped items to take over the current browser window
       */
      preventDropOnDocument: import_prop_types.default.bool,
      /**
       * Allow dropping multiple files
       */
      multiple: import_prop_types.default.bool,
      /**
       * `name` attribute for the input tag
       */
      name: import_prop_types.default.string,
      /**
       * Maximum file size (in bytes)
       */
      maxSize: import_prop_types.default.number,
      /**
       * Minimum file size (in bytes)
       */
      minSize: import_prop_types.default.number,
      /**
       * getDataTransferItems handler
       * @param {Event} event
       * @returns {Array} array of File objects
       */
      getDataTransferItems: import_prop_types.default.func,
      /**
       * onClick callback
       * @param {Event} event
       */
      onClick: import_prop_types.default.func,
      /**
       * onFocus callback
       */
      onFocus: import_prop_types.default.func,
      /**
       * onBlur callback
       */
      onBlur: import_prop_types.default.func,
      /**
       * onKeyDown callback
       */
      onKeyDown: import_prop_types.default.func,
      /**
       * The `onDrop` method that accepts two arguments.
       * The first argument represents the accepted files and the second argument the rejected files.
       *
       * ```javascript
       * function onDrop(acceptedFiles, rejectedFiles) {
       *   // do stuff with files...
       * }
       * ```
       *
       * Files are accepted or rejected based on the `accept` prop.
       * This must be a valid [MIME type](http://www.iana.org/assignments/media-types/media-types.xhtml) according to [input element specification](https://www.w3.org/wiki/HTML/Elements/input/file) or a valid file extension.
       *
       * Note that the `onDrop` callback will always be called regardless if the dropped files were accepted or rejected.
       * You can use the `onDropAccepted`/`onDropRejected` props if you'd like to react to a specific event instead of the `onDrop` prop.
       *
       * The `onDrop` callback will provide you with an array of [Files](https://developer.mozilla.org/en-US/docs/Web/API/File) which you can then process and send to a server.
       * For example, with [SuperAgent](https://github.com/visionmedia/superagent) as a http/ajax library:
       *
       * ```javascript
       * function onDrop(acceptedFiles) {
       *   const req = request.post('/upload')
       *   acceptedFiles.forEach(file => {
       *     req.attach(file.name, file)
       *   })
       *   req.end(callback)
       * }
       * ```
       */
      onDrop: import_prop_types.default.func,
      /**
       * onDropAccepted callback
       */
      onDropAccepted: import_prop_types.default.func,
      /**
       * onDropRejected callback
       */
      onDropRejected: import_prop_types.default.func,
      /**
       * onDragStart callback
       */
      onDragStart: import_prop_types.default.func,
      /**
       * onDragEnter callback
       */
      onDragEnter: import_prop_types.default.func,
      /**
       * onDragOver callback
       */
      onDragOver: import_prop_types.default.func,
      /**
       * onDragLeave callback
       */
      onDragLeave: import_prop_types.default.func,
      /**
       * Provide a callback on clicking the cancel button of the file dialog
       */
      onFileDialogCancel: import_prop_types.default.func
    };
    Dropzone.defaultProps = {
      preventDropOnDocument: true,
      disabled: false,
      multiple: true,
      maxSize: Infinity,
      minSize: 0,
      getDataTransferItems: fromEvent
    };
  }
});

// node_modules/baseui/button/constants.js
var require_constants = __commonJS({
  "node_modules/baseui/button/constants.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.SIZE = exports.SHAPE = exports.KIND = void 0;
    var KIND = exports.KIND = {
      primary: "primary",
      secondary: "secondary",
      tertiary: "tertiary"
    };
    var SHAPE = exports.SHAPE = {
      default: "default",
      pill: "pill",
      round: "round",
      circle: "circle",
      square: "square"
    };
    var SIZE = exports.SIZE = {
      mini: "mini",
      default: "default",
      compact: "compact",
      large: "large"
    };
  }
});

// node_modules/baseui/button/styled-components.js
var require_styled_components = __commonJS({
  "node_modules/baseui/button/styled-components.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.StartEnhancer = exports.LoadingSpinnerContainer = exports.LoadingSpinner = exports.EndEnhancer = exports.BaseButton = exports.AnchorBaseButton = void 0;
    var _styles = require_styles();
    var _constants = require_constants();
    var createStyledBaseButton = (type, styleFn) => (0, _styles.styled)(type, ({
      $theme,
      $size,
      $colors,
      $kind,
      $shape,
      $isLoading,
      $isSelected,
      $disabled,
      $isFocusVisible,
      $as
    }) => ({
      display: "inline-flex",
      // need to maintain button width while showing loading spinner
      flexDirection: $isLoading ? "column" : "row",
      alignItems: "center",
      justifyContent: "center",
      borderLeftWidth: 0,
      borderTopWidth: 0,
      borderRightWidth: 0,
      borderBottomWidth: 0,
      borderLeftStyle: "none",
      borderTopStyle: "none",
      borderRightStyle: "none",
      borderBottomStyle: "none",
      outline: "none",
      boxShadow: $isFocusVisible ? `inset 0 0 0 3px ${$theme.colors.borderAccent}` : "none",
      textDecoration: "none",
      WebkitAppearance: "none",
      transitionProperty: "background",
      transitionDuration: $theme.animation.timing200,
      transitionTimingFunction: $theme.animation.linearCurve,
      cursor: "pointer",
      ":disabled": {
        cursor: "not-allowed",
        ...getDisabledStyles({
          $theme,
          $kind,
          $disabled,
          $isSelected
        })
      },
      marginLeft: 0,
      marginTop: 0,
      marginRight: 0,
      marginBottom: 0,
      ...getFontStyles({
        $theme,
        $size
      }),
      ...getBorderRadiiStyles({
        $theme,
        $size,
        $shape
      }),
      ...getPaddingStyles({
        $theme,
        $size,
        $shape
      }),
      ...getColorStyles({
        $theme,
        $colors,
        $kind,
        $isLoading,
        $isSelected,
        $disabled
      }),
      ...getAnchorDisabledStyles({
        $as,
        $theme,
        $kind,
        $isSelected,
        $disabled
      }),
      ...getShapeStyles({
        $shape,
        $size
      }),
      ...styleFn == null ? void 0 : styleFn({
        $theme,
        $size,
        $colors,
        $kind,
        $shape,
        $isLoading,
        $isSelected,
        $disabled,
        $isFocusVisible,
        $as
      })
    }));
    var BaseButton = exports.BaseButton = createStyledBaseButton("button");
    BaseButton.displayName = "BaseButton";
    var AnchorBaseButton = exports.AnchorBaseButton = createStyledBaseButton("a", ({
      $theme,
      $kind,
      $isSelected,
      $disabled
    }) => getAnchorDisabledStyles({
      $as: "a",
      $theme,
      $kind,
      $isSelected,
      $disabled
    }));
    BaseButton.displayName = "BaseButton";
    var EndEnhancer = exports.EndEnhancer = (0, _styles.styled)("div", ({
      $theme
    }) => {
      const marginDirection = $theme.direction === "rtl" ? "marginRight" : "marginLeft";
      return {
        display: "flex",
        [marginDirection]: $theme.sizing.scale300
      };
    });
    EndEnhancer.displayName = "EndEnhancer";
    EndEnhancer.displayName = "EndEnhancer";
    var StartEnhancer = exports.StartEnhancer = (0, _styles.styled)("div", ({
      $theme
    }) => {
      const marginDirection = $theme.direction === "rtl" ? "marginLeft" : "marginRight";
      return {
        display: "flex",
        [marginDirection]: $theme.sizing.scale300
      };
    });
    StartEnhancer.displayName = "StartEnhancer";
    StartEnhancer.displayName = "StartEnhancer";
    var LoadingSpinnerContainer = exports.LoadingSpinnerContainer = (0, _styles.styled)("div", ({
      $theme,
      $size
    }) => {
      let margins = "3px";
      if ($size === _constants.SIZE.mini || $size === _constants.SIZE.compact) {
        margins = $theme.sizing.scale0;
      }
      if ($size === _constants.SIZE.large) {
        margins = $theme.sizing.scale100;
      }
      return {
        lineHeight: 0,
        position: "static",
        marginBottom: margins,
        marginTop: margins
      };
    });
    LoadingSpinnerContainer.displayName = "LoadingSpinnerContainer";
    LoadingSpinnerContainer.displayName = "LoadingSpinnerContainer";
    var LoadingSpinner = exports.LoadingSpinner = (0, _styles.styled)("span", ({
      $theme,
      $kind,
      $disabled,
      $size
    }) => {
      const {
        foreground,
        background
      } = getLoadingSpinnerColors({
        $theme,
        $kind,
        $disabled
      });
      let dimension = $theme.sizing.scale550;
      if ($size === _constants.SIZE.mini || $size === _constants.SIZE.compact) {
        dimension = $theme.sizing.scale500;
      }
      if ($size === _constants.SIZE.large) {
        dimension = $theme.sizing.scale600;
      }
      return {
        height: dimension,
        width: dimension,
        borderTopLeftRadius: "50%",
        borderTopRightRadius: "50%",
        borderBottomRightRadius: "50%",
        borderBottomLeftRadius: "50%",
        borderLeftStyle: "solid",
        borderTopStyle: "solid",
        borderRightStyle: "solid",
        borderBottomStyle: "solid",
        borderLeftWidth: $theme.sizing.scale0,
        borderTopWidth: $theme.sizing.scale0,
        borderRightWidth: $theme.sizing.scale0,
        borderBottomWidth: $theme.sizing.scale0,
        borderTopColor: foreground,
        borderLeftColor: background,
        borderBottomColor: background,
        borderRightColor: background,
        boxSizing: "border-box",
        display: "inline-block",
        animationDuration: $theme.animation.timing700,
        animationTimingFunction: "linear",
        animationIterationCount: "infinite",
        animationName: {
          to: {
            transform: "rotate(360deg)"
          },
          from: {
            transform: "rotate(0deg)"
          }
        }
      };
    });
    LoadingSpinner.displayName = "LoadingSpinner";
    LoadingSpinner.displayName = "LoadingSpinner";
    function getLoadingSpinnerColors({
      $theme,
      $kind,
      $disabled
    }) {
      if ($disabled) {
        return {
          foreground: $theme.colors.buttonDisabledSpinnerForeground,
          background: $theme.colors.buttonDisabledSpinnerBackground
        };
      }
      switch ($kind) {
        case _constants.KIND.secondary: {
          return {
            foreground: $theme.colors.buttonSecondarySpinnerForeground,
            background: $theme.colors.buttonSecondarySpinnerBackground
          };
        }
        case _constants.KIND.tertiary: {
          return {
            foreground: $theme.colors.buttonTertiarySpinnerForeground,
            background: $theme.colors.buttonTertiarySpinnerBackground
          };
        }
        case _constants.KIND.primary:
        default: {
          return {
            foreground: $theme.colors.buttonPrimarySpinnerForeground,
            background: $theme.colors.buttonPrimarySpinnerBackground
          };
        }
      }
    }
    function getBorderRadiiStyles({
      $theme,
      $size,
      $shape
    }) {
      let value = $theme.borders.buttonBorderRadius;
      if ($shape === _constants.SHAPE.pill) {
        if ($size === _constants.SIZE.compact) {
          value = "30px";
        } else if ($size === _constants.SIZE.large) {
          value = "42px";
        } else {
          value = "38px";
        }
      } else if ($shape === _constants.SHAPE.circle || $shape === _constants.SHAPE.round) {
        value = "50%";
      } else if ($size === _constants.SIZE.mini) {
        value = $theme.borders.buttonBorderRadiusMini;
      }
      return {
        borderTopRightRadius: value,
        borderBottomRightRadius: value,
        borderTopLeftRadius: value,
        borderBottomLeftRadius: value
      };
    }
    function getFontStyles({
      $theme,
      $size
    }) {
      switch ($size) {
        case _constants.SIZE.mini:
          return $theme.typography.font150;
        case _constants.SIZE.compact:
          return $theme.typography.font250;
        case _constants.SIZE.large:
          return $theme.typography.font450;
        default:
          return $theme.typography.font350;
      }
    }
    function getAnchorDisabledStyles({
      $as,
      $theme,
      $kind,
      $isSelected,
      $disabled
    }) {
      if (!($as === "a" && $disabled)) {
        return {};
      }
      return {
        cursor: "not-allowed",
        pointerEvents: "none",
        ...getDisabledStyles({
          $theme,
          $kind,
          $isSelected,
          $disabled
        })
      };
    }
    function getDisabledStyles({
      $theme,
      $kind,
      $isSelected,
      $disabled
    }) {
      if ($disabled && $isSelected) {
        if ($kind === _constants.KIND.primary || $kind === _constants.KIND.secondary) {
          return {
            color: $theme.colors.buttonDisabledActiveText,
            backgroundColor: $theme.colors.buttonDisabledActiveFill
          };
        } else if ($kind === _constants.KIND.tertiary) {
          return {
            backgroundColor: $theme.colors.buttonTertiaryDisabledActiveFill,
            color: $theme.colors.buttonTertiaryDisabledActiveText
          };
        }
      }
      return {
        backgroundColor: $kind === _constants.KIND.tertiary ? "transparent" : $theme.colors.buttonDisabledFill,
        color: $theme.colors.buttonDisabledText
      };
    }
    function getPaddingStyles({
      $theme,
      $size,
      $shape
    }) {
      const iconShape = $shape === _constants.SHAPE.square || $shape === _constants.SHAPE.circle || $shape === _constants.SHAPE.round;
      switch ($size) {
        case _constants.SIZE.mini:
          return {
            paddingTop: $theme.sizing.scale200,
            paddingBottom: $theme.sizing.scale200,
            paddingLeft: iconShape ? $theme.sizing.scale200 : $theme.sizing.scale300,
            paddingRight: iconShape ? $theme.sizing.scale200 : $theme.sizing.scale300
          };
        case _constants.SIZE.compact:
          return {
            paddingTop: $theme.sizing.scale400,
            paddingBottom: $theme.sizing.scale400,
            paddingLeft: iconShape ? $theme.sizing.scale400 : $theme.sizing.scale500,
            paddingRight: iconShape ? $theme.sizing.scale400 : $theme.sizing.scale500
          };
        case _constants.SIZE.large:
          return {
            paddingTop: $theme.sizing.scale600,
            paddingBottom: $theme.sizing.scale600,
            paddingLeft: iconShape ? $theme.sizing.scale600 : $theme.sizing.scale700,
            paddingRight: iconShape ? $theme.sizing.scale600 : $theme.sizing.scale700
          };
        default:
          return {
            paddingTop: $theme.sizing.scale550,
            paddingBottom: $theme.sizing.scale550,
            paddingLeft: iconShape ? $theme.sizing.scale550 : $theme.sizing.scale600,
            paddingRight: iconShape ? $theme.sizing.scale550 : $theme.sizing.scale600
          };
      }
    }
    function getColorStyles({
      // @ts-ignore
      $theme,
      // @ts-ignore
      $colors,
      // @ts-ignore
      $isLoading,
      // @ts-ignore
      $isSelected,
      // @ts-ignore
      $kind,
      // @ts-ignore
      $disabled
    }) {
      if ($colors) {
        return {
          color: $colors.color,
          backgroundColor: $colors.backgroundColor,
          ":hover": {
            boxShadow: "inset 999px 999px 0px rgba(0, 0, 0, 0.04)"
          },
          ":active": {
            boxShadow: "inset 999px 999px 0px rgba(0, 0, 0, 0.08)"
          }
        };
      }
      if ($disabled) {
        return Object.freeze({});
      }
      switch ($kind) {
        case _constants.KIND.primary:
          if ($isSelected) {
            return {
              color: $theme.colors.buttonPrimarySelectedText,
              backgroundColor: $theme.colors.buttonPrimarySelectedFill
            };
          }
          return {
            color: $theme.colors.buttonPrimaryText,
            backgroundColor: $theme.colors.buttonPrimaryFill,
            ":hover": {
              backgroundColor: $isLoading ? $theme.colors.buttonPrimaryActive : $theme.colors.buttonPrimaryHover
            },
            ":active": {
              backgroundColor: $theme.colors.buttonPrimaryActive
            }
          };
        case _constants.KIND.secondary:
          if ($isSelected) {
            return {
              color: $theme.colors.buttonPrimaryText,
              backgroundColor: $theme.colors.buttonPrimaryFill
            };
          }
          return {
            color: $theme.colors.buttonSecondaryText,
            backgroundColor: $theme.colors.buttonSecondaryFill,
            ":hover": {
              backgroundColor: $isLoading ? $theme.colors.buttonSecondaryActive : $theme.colors.buttonSecondaryHover
            },
            ":active": {
              backgroundColor: $theme.colors.buttonSecondaryActive
            }
          };
        case _constants.KIND.tertiary:
          if ($isSelected) {
            return {
              color: $theme.colors.buttonTertiarySelectedText,
              backgroundColor: $theme.colors.buttonTertiarySelectedFill
            };
          }
          return {
            color: $theme.colors.buttonTertiaryText,
            backgroundColor: $theme.colors.buttonTertiaryFill,
            ":hover": {
              backgroundColor: $isLoading ? $theme.colors.buttonTertiaryActive : $theme.colors.buttonTertiaryHover
            },
            ":active": {
              backgroundColor: $theme.colors.buttonTertiaryActive
            }
          };
        default:
          return Object.freeze({});
      }
    }
    function getShapeStyles({
      $shape,
      $size
    }) {
      if ($shape === _constants.SHAPE.circle || $shape === _constants.SHAPE.square) {
        let height, width;
        switch ($size) {
          case _constants.SIZE.mini:
            height = "28px";
            width = "28px";
            break;
          case _constants.SIZE.compact:
            height = "36px";
            width = "36px";
            break;
          case _constants.SIZE.large:
            height = "56px";
            width = "56px";
            break;
          case _constants.SIZE.default:
          default:
            height = "48px";
            width = "48px";
            break;
        }
        return {
          height,
          width,
          paddingTop: 0,
          paddingBottom: 0,
          paddingLeft: 0,
          paddingRight: 0
        };
      } else {
        return {};
      }
    }
  }
});

// node_modules/baseui/button/utils.js
var require_utils = __commonJS({
  "node_modules/baseui/button/utils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.getSharedProps = getSharedProps;
    function getSharedProps({
      colors,
      disabled,
      isLoading,
      isSelected,
      kind,
      shape,
      size
    }) {
      return {
        $colors: colors,
        $disabled: disabled,
        $isLoading: isLoading,
        $isSelected: isSelected,
        $kind: kind,
        $shape: shape,
        $size: size
      };
    }
  }
});

// node_modules/baseui/button/button-internals.js
var require_button_internals = __commonJS({
  "node_modules/baseui/button/button-internals.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = ButtonInternals;
    var React2 = _interopRequireWildcard(require_react());
    var ReactIs = _interopRequireWildcard(require_react_is());
    var _styledComponents = require_styled_components();
    var _utils = require_utils();
    var _overrides = require_overrides();
    function _getRequireWildcardCache(e) {
      if ("function" != typeof WeakMap) return null;
      var r = /* @__PURE__ */ new WeakMap(), t = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function(e2) {
        return e2 ? t : r;
      })(e);
    }
    function _interopRequireWildcard(e, r) {
      if (!r && e && e.__esModule) return e;
      if (null === e || "object" != typeof e && "function" != typeof e) return { default: e };
      var t = _getRequireWildcardCache(r);
      if (t && t.has(e)) return t.get(e);
      var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
      return n.default = e, t && t.set(e, n), n;
    }
    function _extends2() {
      _extends2 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends2.apply(this, arguments);
    }
    function RenderEnhancer(props) {
      const {
        Enhancer,
        ...restProps
      } = props;
      if (typeof Enhancer === "string") {
        return Enhancer;
      }
      if (ReactIs.isValidElementType(Enhancer)) {
        return React2.createElement(Enhancer, restProps);
      }
      return Enhancer;
    }
    function ButtonInternals(props) {
      const {
        children,
        overrides = {},
        startEnhancer,
        endEnhancer
      } = props;
      const [StartEnhancer, startEnhancerProps] = (0, _overrides.getOverrides)(overrides.StartEnhancer, _styledComponents.StartEnhancer);
      const [EndEnhancer, endEnhancerProps] = (0, _overrides.getOverrides)(overrides.EndEnhancer, _styledComponents.EndEnhancer);
      const sharedProps = (0, _utils.getSharedProps)(props);
      const content = React2.createElement(React2.Fragment, null, startEnhancer !== null && startEnhancer !== void 0 && React2.createElement(StartEnhancer, _extends2({}, sharedProps, startEnhancerProps), React2.createElement(RenderEnhancer, {
        Enhancer: startEnhancer
      })), children, endEnhancer !== null && endEnhancer !== void 0 && React2.createElement(EndEnhancer, _extends2({}, sharedProps, endEnhancerProps), React2.createElement(RenderEnhancer, {
        Enhancer: endEnhancer
      })));
      if (props.isLoading) {
        const hiddenStyle = {
          opacity: 0,
          display: "flex",
          height: "0px"
        };
        return React2.createElement("div", {
          style: hiddenStyle
        }, content);
      }
      return React2.createElement(React2.Fragment, null, content);
    }
  }
});

// node_modules/baseui/button/default-props.js
var require_default_props = __commonJS({
  "node_modules/baseui/button/default-props.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.defaultProps = void 0;
    var _constants = require_constants();
    var defaultProps = exports.defaultProps = {
      disabled: false,
      isLoading: false,
      isSelected: false,
      kind: _constants.KIND.primary,
      overrides: {},
      shape: _constants.SHAPE.default,
      size: _constants.SIZE.default
    };
  }
});

// node_modules/baseui/button/button.js
var require_button = __commonJS({
  "node_modules/baseui/button/button.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var React2 = _interopRequireWildcard(require_react());
    var _styledComponents = require_styled_components();
    var _utils = require_utils();
    var _buttonInternals = _interopRequireDefault(require_button_internals());
    var _defaultProps = require_default_props();
    var _overrides = require_overrides();
    var _focusVisible = require_focusVisible();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _getRequireWildcardCache(e) {
      if ("function" != typeof WeakMap) return null;
      var r = /* @__PURE__ */ new WeakMap(), t = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function(e2) {
        return e2 ? t : r;
      })(e);
    }
    function _interopRequireWildcard(e, r) {
      if (!r && e && e.__esModule) return e;
      if (null === e || "object" != typeof e && "function" != typeof e) return { default: e };
      var t = _getRequireWildcardCache(r);
      if (t && t.has(e)) return t.get(e);
      var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
      return n.default = e, t && t.set(e, n), n;
    }
    function _extends2() {
      _extends2 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends2.apply(this, arguments);
    }
    function _defineProperty2(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey(t) {
      var i = _toPrimitive(t, "string");
      return "symbol" == typeof i ? i : String(i);
    }
    function _toPrimitive(t, r) {
      if ("object" != typeof t || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != typeof i) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    var Button = class extends React2.Component {
      constructor(..._args) {
        super(..._args);
        _defineProperty2(this, "state", {
          isFocusVisible: false
        });
        _defineProperty2(this, "internalOnClick", (...args) => {
          const {
            isLoading,
            onClick
          } = this.props;
          if (isLoading) {
            args[0].preventDefault();
            return;
          }
          onClick && onClick(...args);
        });
        _defineProperty2(this, "handleFocus", (event) => {
          if ((0, _focusVisible.isFocusVisible)(event)) {
            this.setState({
              isFocusVisible: true
            });
          }
        });
        _defineProperty2(this, "handleBlur", (event) => {
          if (this.state.isFocusVisible !== false) {
            this.setState({
              isFocusVisible: false
            });
          }
        });
      }
      render() {
        const {
          overrides = {},
          // eslint-disable-next-line @typescript-eslint/no-unused-vars
          size,
          // eslint-disable-next-line @typescript-eslint/no-unused-vars
          kind,
          // eslint-disable-next-line @typescript-eslint/no-unused-vars
          shape,
          isLoading,
          // eslint-disable-next-line @typescript-eslint/no-unused-vars
          isSelected,
          // Removing from restProps
          // eslint-disable-next-line @typescript-eslint/no-unused-vars
          startEnhancer,
          // eslint-disable-next-line @typescript-eslint/no-unused-vars
          endEnhancer,
          // eslint-disable-next-line @typescript-eslint/no-unused-vars
          children,
          forwardedRef,
          // eslint-disable-next-line @typescript-eslint/no-unused-vars
          colors,
          ...restProps
        } = this.props;
        const isAnchor = "href" in restProps && Boolean(restProps == null ? void 0 : restProps.href);
        const [BaseButton, baseButtonProps] = (0, _overrides.getOverrides)(
          // adding both (1) BaseButton and (2) Root
          // (1) because it's a Button under the hood
          // (2) because we want consistency with the rest of the components
          overrides.BaseButton || overrides.Root,
          isAnchor ? _styledComponents.AnchorBaseButton : _styledComponents.BaseButton
        );
        const [LoadingSpinner, loadingSpinnerProps] = (0, _overrides.getOverrides)(overrides.LoadingSpinner, _styledComponents.LoadingSpinner);
        const [LoadingSpinnerContainer, loadingSpinnerContainerProps] = (0, _overrides.getOverrides)(overrides.LoadingSpinnerContainer, _styledComponents.LoadingSpinnerContainer);
        const sharedProps = {
          ...(0, _utils.getSharedProps)(this.props),
          $isFocusVisible: this.state.isFocusVisible
        };
        const ariaLoadingElements = isLoading ? {
          ["aria-label"]: typeof this.props.children === "string" ? `loading ${this.props.children}` : "content is loading",
          ["aria-busy"]: "true",
          ["aria-live"]: "polite"
        } : {};
        const ariaDisabledProps = (restProps == null ? void 0 : restProps.disabled) && isAnchor ? {
          ["aria-disabled"]: true
        } : {};
        return React2.createElement(BaseButton, _extends2({
          ref: forwardedRef,
          "data-baseweb": "button"
        }, ariaLoadingElements, ariaDisabledProps, sharedProps, restProps, baseButtonProps, {
          // Applies last to override passed in onClick
          onClick: this.internalOnClick,
          onFocus: (0, _focusVisible.forkFocus)({
            ...restProps,
            ...baseButtonProps
          }, this.handleFocus),
          onBlur: (0, _focusVisible.forkBlur)({
            ...restProps,
            ...baseButtonProps
          }, this.handleBlur)
        }), isLoading ? React2.createElement(React2.Fragment, null, React2.createElement(_buttonInternals.default, this.props), React2.createElement(LoadingSpinnerContainer, _extends2({}, sharedProps, loadingSpinnerContainerProps), React2.createElement(LoadingSpinner, _extends2({}, sharedProps, loadingSpinnerProps)))) : React2.createElement(_buttonInternals.default, this.props));
      }
    };
    _defineProperty2(Button, "defaultProps", _defaultProps.defaultProps);
    var ForwardedButton = React2.forwardRef((props, ref) => React2.createElement(Button, _extends2({
      forwardedRef: ref
    }, props)));
    ForwardedButton.displayName = "Button";
    var _default = exports.default = ForwardedButton;
  }
});

// node_modules/baseui/button/types.js
var require_types = __commonJS({
  "node_modules/baseui/button/types.js"() {
    "use strict";
  }
});

// node_modules/baseui/button/index.js
var require_button2 = __commonJS({
  "node_modules/baseui/button/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _exportNames = {
      Button: true,
      KIND: true,
      SIZE: true,
      SHAPE: true,
      StyledBaseButton: true,
      StyledStartEnhancer: true,
      StyledEndEnhancer: true,
      StyledLoadingSpinner: true,
      StyledLoadingSpinnerContainer: true
    };
    Object.defineProperty(exports, "Button", {
      enumerable: true,
      get: function() {
        return _button.default;
      }
    });
    Object.defineProperty(exports, "KIND", {
      enumerable: true,
      get: function() {
        return _constants.KIND;
      }
    });
    Object.defineProperty(exports, "SHAPE", {
      enumerable: true,
      get: function() {
        return _constants.SHAPE;
      }
    });
    Object.defineProperty(exports, "SIZE", {
      enumerable: true,
      get: function() {
        return _constants.SIZE;
      }
    });
    Object.defineProperty(exports, "StyledBaseButton", {
      enumerable: true,
      get: function() {
        return _styledComponents.BaseButton;
      }
    });
    Object.defineProperty(exports, "StyledEndEnhancer", {
      enumerable: true,
      get: function() {
        return _styledComponents.EndEnhancer;
      }
    });
    Object.defineProperty(exports, "StyledLoadingSpinner", {
      enumerable: true,
      get: function() {
        return _styledComponents.LoadingSpinner;
      }
    });
    Object.defineProperty(exports, "StyledLoadingSpinnerContainer", {
      enumerable: true,
      get: function() {
        return _styledComponents.LoadingSpinnerContainer;
      }
    });
    Object.defineProperty(exports, "StyledStartEnhancer", {
      enumerable: true,
      get: function() {
        return _styledComponents.StartEnhancer;
      }
    });
    var _button = _interopRequireDefault(require_button());
    var _constants = require_constants();
    var _styledComponents = require_styled_components();
    var _types = require_types();
    Object.keys(_types).forEach(function(key) {
      if (key === "default" || key === "__esModule") return;
      if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
      if (key in exports && exports[key] === _types[key]) return;
      Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
          return _types[key];
        }
      });
    });
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
  }
});

// node_modules/baseui/progress-bar/constants.js
var require_constants2 = __commonJS({
  "node_modules/baseui/progress-bar/constants.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.SIZE = void 0;
    var SIZE = exports.SIZE = {
      small: "small",
      medium: "medium",
      large: "large"
    };
  }
});

// node_modules/baseui/progress-bar/styled-components.js
var require_styled_components2 = __commonJS({
  "node_modules/baseui/progress-bar/styled-components.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.StyledRoot = exports.StyledProgressBarRoundedTrackForeground = exports.StyledProgressBarRoundedTrackBackground = exports.StyledProgressBarRoundedText = exports.StyledProgressBarRoundedSvg = exports.StyledProgressBarRoundedRoot = exports.StyledLabel = exports.StyledInfiniteBar = exports.StyledBarProgress = exports.StyledBarContainer = exports.StyledBar = void 0;
    var _styles = require_styles();
    var _constants = require_constants2();
    var _react = _interopRequireDefault(require_react());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _extends2() {
      _extends2 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends2.apply(this, arguments);
    }
    function getBarHeight(size) {
      return {
        [_constants.SIZE.small]: "2px",
        [_constants.SIZE.medium]: "4px",
        [_constants.SIZE.large]: "8px"
      }[size];
    }
    var StyledRoot = exports.StyledRoot = (0, _styles.styled)("div", (props) => {
      return {
        width: "100%"
      };
    });
    StyledRoot.displayName = "StyledRoot";
    StyledRoot.displayName = "StyledRoot";
    var StyledBarContainer = exports.StyledBarContainer = (0, _styles.styled)("div", (props) => {
      const {
        $theme
      } = props;
      const {
        sizing
      } = $theme;
      return {
        display: "flex",
        marginLeft: sizing.scale500,
        marginRight: sizing.scale500,
        marginTop: sizing.scale500,
        marginBottom: sizing.scale500
      };
    });
    StyledBarContainer.displayName = "StyledBarContainer";
    StyledBarContainer.displayName = "StyledBarContainer";
    var StyledBar = exports.StyledBar = (0, _styles.styled)("div", (props) => {
      const {
        $theme,
        $size,
        $steps
      } = props;
      const {
        colors,
        sizing,
        borders
      } = $theme;
      const borderRadius = borders.useRoundedCorners ? sizing.scale0 : 0;
      return {
        borderTopLeftRadius: borderRadius,
        borderTopRightRadius: borderRadius,
        borderBottomRightRadius: borderRadius,
        borderBottomLeftRadius: borderRadius,
        backgroundColor: colors.backgroundTertiary,
        height: getBarHeight($size),
        flex: 1,
        overflow: "hidden",
        // @ts-ignore
        ...$steps < 2 ? {} : {
          marginLeft: sizing.scale300,
          ":first-child": {
            marginLeft: "0"
          }
        }
      };
    });
    StyledBar.displayName = "StyledBar";
    StyledBar.displayName = "StyledBar";
    var StyledBarProgress = exports.StyledBarProgress = (0, _styles.styled)("div", (props) => {
      const {
        $theme,
        $value,
        $successValue,
        $steps,
        $index,
        $maxValue,
        $minValue = 0
      } = props;
      const maxValue = $maxValue ? $maxValue : $successValue;
      const {
        colors,
        sizing,
        borders
      } = $theme;
      const width = `${100 - ($value - $minValue) * 100 / (maxValue - $minValue)}%`;
      const stepStates = {
        default: "default",
        awaits: "awaits",
        inProgress: "inProgress",
        completed: "completed"
      };
      let stepState = stepStates.default;
      if ($steps > 1) {
        const stepValue = (maxValue - $minValue) / $steps;
        const currentValue = ($value - $minValue) / (maxValue - $minValue) * 100;
        const completedSteps = Math.floor(currentValue / stepValue);
        if ($index < completedSteps) {
          stepState = stepStates.completed;
        } else if ($index === completedSteps) {
          stepState = stepStates.inProgress;
        } else {
          stepState = stepStates.awaits;
        }
      }
      const borderRadius = borders.useRoundedCorners ? sizing.scale0 : 0;
      const animationStyles = {
        transform: `translateX(-${width})`
      };
      const stepAnimationStyles = stepState === stepStates.inProgress ? {
        animationDuration: "2.1s",
        animationIterationCount: "infinite",
        animationTimingFunction: $theme.animation.linearCurve,
        animationName: {
          "0%": {
            transform: "translateX(-102%)",
            opacity: 1
          },
          "50%": {
            transform: "translateX(0%)",
            opacity: 1
          },
          "100%": {
            transform: "translateX(0%)",
            opacity: 0
          }
        }
      } : stepState === stepStates.completed ? {
        transform: "translateX(0%)"
      } : {
        transform: "translateX(-102%)"
      };
      return {
        borderTopLeftRadius: borderRadius,
        borderTopRightRadius: borderRadius,
        borderBottomRightRadius: borderRadius,
        borderBottomLeftRadius: borderRadius,
        backgroundColor: colors.backgroundAccent,
        height: "100%",
        width: "100%",
        transform: "translateX(-102%)",
        transition: "transform 0.5s",
        ...$steps > 1 ? stepAnimationStyles : animationStyles
      };
    });
    StyledBarProgress.displayName = "StyledBarProgress";
    StyledBarProgress.displayName = "StyledBarProgress";
    var StyledInfiniteBar = exports.StyledInfiniteBar = (0, _styles.styled)("div", (props) => {
      const {
        $theme,
        $isLeft = false,
        $size = _constants.SIZE.medium
      } = props;
      const {
        colors,
        sizing,
        borders
      } = $theme;
      const borderRadius = borders.useRoundedCorners ? sizing.scale0 : 0;
      const height = getBarHeight($size);
      const animationStyles = {
        display: "inline-block",
        flex: 1,
        marginLeft: "auto",
        marginRight: "auto",
        transitionProperty: "background-position",
        animationDuration: "1.5s",
        animationIterationCount: "infinite",
        animationTimingFunction: $theme.animation.linearCurve,
        backgroundSize: "300% auto",
        backgroundRepeat: "no-repeat",
        backgroundPositionX: $isLeft ? "-50%" : "150%",
        backgroundImage: `linear-gradient(${$isLeft ? "90" : "270"}deg, transparent 0%, ${colors.backgroundAccent} 25%, ${colors.backgroundAccent} 75%, transparent 100%)`,
        animationName: $isLeft ? {
          "0%": {
            backgroundPositionX: "-50%"
          },
          "33%": {
            backgroundPositionX: "50%"
          },
          "66%": {
            backgroundPositionX: "50%"
          },
          "100%": {
            backgroundPositionX: "150%"
          }
        } : {
          "0%": {
            backgroundPositionX: "150%"
          },
          "33%": {
            backgroundPositionX: "50%"
          },
          "66%": {
            backgroundPositionX: "50%"
          },
          "100%": {
            backgroundPositionX: "-50%"
          }
        }
      };
      return {
        ...$isLeft ? {
          borderTopLeftRadius: borderRadius,
          borderBottomLeftRadius: borderRadius
        } : {
          borderTopRightRadius: borderRadius,
          borderBottomRightRadius: borderRadius
        },
        height,
        ...animationStyles
      };
    });
    StyledInfiniteBar.displayName = "StyledInfiniteBar";
    StyledInfiniteBar.displayName = "StyledInfiniteBar";
    var StyledLabel = exports.StyledLabel = (0, _styles.styled)("div", (props) => {
      return {
        textAlign: "center",
        ...props.$theme.typography.font150,
        color: props.$theme.colors.contentTertiary
      };
    });
    StyledLabel.displayName = "StyledLabel";
    StyledLabel.displayName = "StyledLabel";
    var PROGRESS_BAR_ROUNDED_SIZES = {
      [_constants.SIZE.large]: {
        d: "M47.5 4H71.5529C82.2933 4 91 12.9543 91 24C91 35.0457 82.2933 44 71.5529 44H23.4471C12.7067 44 4 35.0457 4 24C4 12.9543 12.7067 4 23.4471 4H47.5195",
        width: 95,
        height: 48,
        strokeWidth: 8,
        typography: "LabelLarge"
      },
      [_constants.SIZE.medium]: {
        d: "M39 2H60.5833C69.0977 2 76 9.16344 76 18C76 26.8366 69.0977 34 60.5833 34H17.4167C8.90228 34 2 26.8366 2 18C2 9.16344 8.90228 2 17.4167 2H39.0195",
        width: 78,
        height: 36,
        strokeWidth: 4,
        typography: "LabelMedium"
      },
      [_constants.SIZE.small]: {
        d: "M32 1H51.6271C57.9082 1 63 6.37258 63 13C63 19.6274 57.9082 25 51.6271 25H12.3729C6.09181 25 1 19.6274 1 13C1 6.37258 6.09181 1 12.3729 1H32.0195",
        width: 64,
        height: 26,
        strokeWidth: 2,
        typography: "LabelSmall"
      }
    };
    var StyledProgressBarRoundedRoot = exports.StyledProgressBarRoundedRoot = (0, _styles.styled)("div", ({
      $size,
      $inline
    }) => {
      return {
        width: PROGRESS_BAR_ROUNDED_SIZES[$size].width + "px",
        height: PROGRESS_BAR_ROUNDED_SIZES[$size].height + "px",
        position: "relative",
        display: $inline ? "inline-flex" : "flex",
        alignItems: "center",
        justifyContent: "center"
      };
    });
    StyledProgressBarRoundedRoot.displayName = "StyledProgressBarRoundedRoot";
    StyledProgressBarRoundedRoot.displayName = "StyledProgressBarRoundedRoot";
    var _StyledProgressBarRoundedSvg = (0, _styles.styled)("svg", ({
      $size
    }) => {
      return {
        width: PROGRESS_BAR_ROUNDED_SIZES[$size].width + "px",
        height: PROGRESS_BAR_ROUNDED_SIZES[$size].height + "px",
        position: "absolute",
        fill: "none"
      };
    });
    _StyledProgressBarRoundedSvg.displayName = "_StyledProgressBarRoundedSvg";
    _StyledProgressBarRoundedSvg.displayName = "_StyledProgressBarRoundedSvg";
    var StyledProgressBarRoundedSvg = exports.StyledProgressBarRoundedSvg = (0, _styles.withWrapper)(_StyledProgressBarRoundedSvg, (Styled) => function StyledProgressBarRoundedSvg2(props) {
      return _react.default.createElement(Styled, _extends2({
        viewBox: `0 0 ${PROGRESS_BAR_ROUNDED_SIZES[props.$size].width} ${PROGRESS_BAR_ROUNDED_SIZES[props.$size].height}`,
        xmlns: "http://www.w3.org/2000/svg"
      }, props));
    });
    var _StyledProgressBarRoundedTrackBackground = (0, _styles.styled)("path", ({
      $theme,
      $size
    }) => {
      return {
        stroke: $theme.colors.backgroundTertiary,
        strokeWidth: PROGRESS_BAR_ROUNDED_SIZES[$size].strokeWidth + "px"
      };
    });
    _StyledProgressBarRoundedTrackBackground.displayName = "_StyledProgressBarRoundedTrackBackground";
    _StyledProgressBarRoundedTrackBackground.displayName = "_StyledProgressBarRoundedTrackBackground";
    var StyledProgressBarRoundedTrackBackground = exports.StyledProgressBarRoundedTrackBackground = (0, _styles.withWrapper)(_StyledProgressBarRoundedTrackBackground, (Styled) => function StyledProgressBarRoundedSvg2(props) {
      return _react.default.createElement(Styled, _extends2({
        d: PROGRESS_BAR_ROUNDED_SIZES[props.$size].d
      }, props));
    });
    var _StyledProgressBarRoundedTrackForeground = (0, _styles.styled)("path", ({
      $theme,
      $size,
      $visible
    }) => {
      return {
        visibility: $visible ? "visible" : "hidden",
        stroke: $theme.colors.borderAccent,
        strokeWidth: PROGRESS_BAR_ROUNDED_SIZES[$size].strokeWidth + "px"
      };
    });
    _StyledProgressBarRoundedTrackForeground.displayName = "_StyledProgressBarRoundedTrackForeground";
    _StyledProgressBarRoundedTrackForeground.displayName = "_StyledProgressBarRoundedTrackForeground";
    var StyledProgressBarRoundedTrackForeground = exports.StyledProgressBarRoundedTrackForeground = (0, _styles.withWrapper)(_StyledProgressBarRoundedTrackForeground, (Styled) => function StyledProgressBarRoundedSvg2(props) {
      return _react.default.createElement(Styled, _extends2({
        d: PROGRESS_BAR_ROUNDED_SIZES[props.$size].d,
        style: {
          strokeDasharray: props.$pathLength,
          strokeDashoffset: props.$pathLength * (1 - props.$pathProgress) + ""
        }
      }, props));
    });
    var StyledProgressBarRoundedText = exports.StyledProgressBarRoundedText = (0, _styles.styled)("div", ({
      $theme,
      $size
    }) => {
      return {
        color: $theme.colors.contentPrimary,
        // @ts-ignore
        ...$theme.typography[PROGRESS_BAR_ROUNDED_SIZES[$size].typography]
      };
    });
    StyledProgressBarRoundedText.displayName = "StyledProgressBarRoundedText";
    StyledProgressBarRoundedText.displayName = "StyledProgressBarRoundedText";
  }
});

// node_modules/baseui/progress-bar/progressbar.js
var require_progressbar = __commonJS({
  "node_modules/baseui/progress-bar/progressbar.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var React2 = _interopRequireWildcard(require_react());
    var _overrides = require_overrides();
    var _constants = require_constants2();
    var _styledComponents = require_styled_components2();
    function _getRequireWildcardCache(e) {
      if ("function" != typeof WeakMap) return null;
      var r = /* @__PURE__ */ new WeakMap(), t = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function(e2) {
        return e2 ? t : r;
      })(e);
    }
    function _interopRequireWildcard(e, r) {
      if (!r && e && e.__esModule) return e;
      if (null === e || "object" != typeof e && "function" != typeof e) return { default: e };
      var t = _getRequireWildcardCache(r);
      if (t && t.has(e)) return t.get(e);
      var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
      return n.default = e, t && t.set(e, n), n;
    }
    function _extends2() {
      _extends2 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends2.apply(this, arguments);
    }
    function _defineProperty2(obj, key, value) {
      key = _toPropertyKey(key);
      if (key in obj) {
        Object.defineProperty(obj, key, { value, enumerable: true, configurable: true, writable: true });
      } else {
        obj[key] = value;
      }
      return obj;
    }
    function _toPropertyKey(t) {
      var i = _toPrimitive(t, "string");
      return "symbol" == typeof i ? i : String(i);
    }
    function _toPrimitive(t, r) {
      if ("object" != typeof t || !t) return t;
      var e = t[Symbol.toPrimitive];
      if (void 0 !== e) {
        var i = e.call(t, r || "default");
        if ("object" != typeof i) return i;
        throw new TypeError("@@toPrimitive must return a primitive value.");
      }
      return ("string" === r ? String : Number)(t);
    }
    var ProgressBar = class extends React2.Component {
      componentDidMount() {
        if (true) {
          if (this.props.errorMessage) {
            console.warn("baseui:ProgressBar The `errorMessage` prop is deprecated in WAI-ARIA v1.2.");
          }
        }
      }
      render() {
        const {
          overrides = {},
          getProgressLabel,
          value,
          size,
          steps,
          successValue,
          minValue,
          maxValue,
          showLabel,
          infinite,
          errorMessage,
          forwardedRef,
          ...restProps
        } = this.props;
        const propsAriaLabel = this.props["aria-label"] || this.props.ariaLabel;
        const progressLabel = getProgressLabel(value, maxValue, minValue);
        const stepsLabel = getStepProgressLabel(value, maxValue, minValue, steps);
        const ariaLabel = propsAriaLabel || this.props.infinite ? "Loading" : this.props.steps > 1 ? stepsLabel : progressLabel;
        const maximumValue = maxValue !== 100 ? maxValue : successValue;
        const [Root, rootProps] = (0, _overrides.getOverrides)(overrides.Root, _styledComponents.StyledRoot);
        const [BarContainer, barContainerProps] = (0, _overrides.getOverrides)(overrides.BarContainer, _styledComponents.StyledBarContainer);
        const [Bar, barProps] = (0, _overrides.getOverrides)(overrides.Bar, _styledComponents.StyledBar);
        const [BarProgress, barProgressProps] = (0, _overrides.getOverrides)(overrides.BarProgress, _styledComponents.StyledBarProgress);
        const [Label, labelProps] = (0, _overrides.getOverrides)(overrides.Label, _styledComponents.StyledLabel);
        const [InfiniteBar, infiniteBarProps] = (0, _overrides.getOverrides)(overrides.InfiniteBar, _styledComponents.StyledInfiniteBar);
        const sharedProps = {
          $infinite: infinite,
          $size: size,
          $steps: steps,
          $successValue: maximumValue,
          $minValue: minValue,
          $maxValue: maximumValue,
          $value: value
        };
        function renderProgressBar() {
          const children = [];
          for (let i = 0; i < steps; i++) {
            children.push(
              // @ts-ignore
              React2.createElement(Bar, _extends2({
                key: i
              }, sharedProps, barProps), React2.createElement(BarProgress, _extends2({
                $index: i
              }, sharedProps, barProgressProps)))
            );
          }
          return children;
        }
        function getStepProgressLabel(value2, maxValue2, minValue2, steps2) {
          return `Step ${Math.ceil((value2 - minValue2) / (maxValue2 - minValue2) * steps2)} of ${steps2}`;
        }
        return (
          /* eslint-disable jsx-a11y/role-supports-aria-props */
          React2.createElement(Root, _extends2({
            ref: forwardedRef,
            "data-baseweb": "progress-bar",
            role: "progressbar",
            "aria-label": ariaLabel,
            "aria-valuenow": infinite ? null : value,
            "aria-valuemin": infinite ? null : minValue,
            "aria-valuemax": infinite ? null : maximumValue,
            "aria-invalid": errorMessage ? true : null,
            "aria-errormessage": errorMessage
          }, restProps, sharedProps, rootProps), React2.createElement(BarContainer, _extends2({}, sharedProps, barContainerProps), infinite ? React2.createElement(React2.Fragment, null, React2.createElement(InfiniteBar, _extends2({
            $isLeft: true,
            $size: sharedProps.$size
          }, infiniteBarProps)), React2.createElement(InfiniteBar, _extends2({
            $size: sharedProps.$size
          }, infiniteBarProps))) : renderProgressBar()), showLabel && React2.createElement(Label, _extends2({}, sharedProps, labelProps), getProgressLabel(value, maximumValue, minValue)))
        );
      }
    };
    _defineProperty2(ProgressBar, "defaultProps", {
      getProgressLabel: (value, maxValue, minValue) => `${Math.round((value - minValue) / (maxValue - minValue) * 100)}% Complete`,
      infinite: false,
      overrides: {},
      showLabel: false,
      size: _constants.SIZE.medium,
      steps: 1,
      successValue: 100,
      minValue: 0,
      maxValue: 100,
      value: 0
    });
    var ForwardedProgressBar = React2.forwardRef(
      // @ts-ignore
      (props, ref) => (
        //$FlowExpectedError[cannot-spread-inexact]
        React2.createElement(ProgressBar, _extends2({
          forwardedRef: ref
        }, props))
      )
    );
    ForwardedProgressBar.displayName = "ProgressBar";
    var _default = exports.default = ForwardedProgressBar;
  }
});

// node_modules/baseui/progress-bar/progressbar-rounded.js
var require_progressbar_rounded = __commonJS({
  "node_modules/baseui/progress-bar/progressbar-rounded.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var React2 = _interopRequireWildcard(require_react());
    var _constants = require_constants2();
    var _styledComponents = require_styled_components2();
    var _overrides = require_overrides();
    function _getRequireWildcardCache(e) {
      if ("function" != typeof WeakMap) return null;
      var r = /* @__PURE__ */ new WeakMap(), t = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function(e2) {
        return e2 ? t : r;
      })(e);
    }
    function _interopRequireWildcard(e, r) {
      if (!r && e && e.__esModule) return e;
      if (null === e || "object" != typeof e && "function" != typeof e) return { default: e };
      var t = _getRequireWildcardCache(r);
      if (t && t.has(e)) return t.get(e);
      var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
      return n.default = e, t && t.set(e, n), n;
    }
    function _extends2() {
      _extends2 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends2.apply(this, arguments);
    }
    var defaults = {
      Root: _styledComponents.StyledProgressBarRoundedRoot,
      Svg: _styledComponents.StyledProgressBarRoundedSvg,
      TrackBackground: _styledComponents.StyledProgressBarRoundedTrackBackground,
      TrackForeground: _styledComponents.StyledProgressBarRoundedTrackForeground,
      Text: _styledComponents.StyledProgressBarRoundedText
    };
    function roundTo(n, digits) {
      if (digits === void 0) {
        digits = 0;
      }
      const multiplicator = Math.pow(10, digits);
      n = parseFloat((n * multiplicator).toFixed(11));
      const test = Math.round(n) / multiplicator;
      return +test.toFixed(digits);
    }
    function ProgressBarRounded({
      progress = 0,
      size = _constants.SIZE.medium,
      animate = true,
      inline = false,
      overrides = {},
      ...restProps
    }) {
      const {
        Root: [Root, rootProps],
        Svg: [Svg, svgProps],
        TrackBackground: [TrackBackground, trackBackgroundProps],
        TrackForeground: [TrackForeground, trackForegroundProps],
        Text: [Text, textProps]
      } = (0, _overrides.useOverrides)(defaults, overrides);
      const [pathLength, setPathLength] = React2.useState(0);
      const pathRef = React2.useRef();
      React2.useEffect(() => {
        if (pathRef.current && pathRef.current.getTotalLength) {
          setPathLength(pathRef.current.getTotalLength());
        }
      }, []);
      const animationFrameRef = React2.useRef();
      const [pathProgress, setPathProgress] = React2.useState(0);
      React2.useEffect(() => {
        if (!animate) {
          setPathProgress(progress);
          return;
        }
        if (window && animationFrameRef.current) {
          window.cancelAnimationFrame(animationFrameRef.current);
        }
        let animationDuration = Math.max(1e3 * (progress - pathProgress), 250);
        let animationTimeStarted;
        function loop(now = 0) {
          if (!animationTimeStarted) {
            animationTimeStarted = now;
          }
          let animationTimeElapsed = now - animationTimeStarted;
          let currentPathProgress = Math.min((progress - pathProgress) * (animationTimeElapsed / animationDuration) + pathProgress, 1);
          currentPathProgress = Math.max(currentPathProgress, 0);
          setPathProgress(currentPathProgress);
          if (animationTimeElapsed <= animationDuration) {
            animationFrameRef.current = window.requestAnimationFrame(loop);
          }
        }
        loop();
      }, [progress]);
      return React2.createElement(Root, _extends2({
        "data-baseweb": "progressbar-rounded",
        role: "progressbar",
        "aria-valuenow": progress.toFixed(2).replace(/\.?0+$/, ""),
        "aria-valuemin": 0,
        "aria-valuemax": 1,
        $size: size,
        $inline: inline
      }, restProps, rootProps), React2.createElement(Svg, _extends2({
        $size: size
      }, restProps, svgProps), React2.createElement(TrackBackground, _extends2({
        $size: size
      }, trackBackgroundProps)), React2.createElement(TrackForeground, _extends2({
        ref: pathRef,
        $size: size,
        $visible: !!pathRef.current,
        $pathLength: pathLength,
        $pathProgress: pathProgress
      }, trackForegroundProps))), React2.createElement(Text, _extends2({
        $size: size
      }, textProps), roundTo(Math.min(progress * 100, 100)), "%"));
    }
    var _default = exports.default = ProgressBarRounded;
  }
});

// node_modules/baseui/progress-bar/types.js
var require_types2 = __commonJS({
  "node_modules/baseui/progress-bar/types.js"() {
    "use strict";
  }
});

// node_modules/baseui/progress-bar/index.js
var require_progress_bar = __commonJS({
  "node_modules/baseui/progress-bar/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _exportNames = {
      ProgressBar: true,
      ProgressBarRounded: true,
      SIZE: true,
      StyledRoot: true,
      StyledBarContainer: true,
      StyledBar: true,
      StyledBarProgress: true,
      StyledInfiniteBar: true,
      StyledLabel: true,
      StyledProgressBarRoundedRoot: true,
      StyledProgressBarRoundedSvg: true,
      StyledProgressBarRoundedTrackBackground: true,
      StyledProgressBarRoundedTrackForeground: true,
      StyledProgressBarRoundedText: true
    };
    Object.defineProperty(exports, "ProgressBar", {
      enumerable: true,
      get: function() {
        return _progressbar.default;
      }
    });
    Object.defineProperty(exports, "ProgressBarRounded", {
      enumerable: true,
      get: function() {
        return _progressbarRounded.default;
      }
    });
    Object.defineProperty(exports, "SIZE", {
      enumerable: true,
      get: function() {
        return _constants.SIZE;
      }
    });
    Object.defineProperty(exports, "StyledBar", {
      enumerable: true,
      get: function() {
        return _styledComponents.StyledBar;
      }
    });
    Object.defineProperty(exports, "StyledBarContainer", {
      enumerable: true,
      get: function() {
        return _styledComponents.StyledBarContainer;
      }
    });
    Object.defineProperty(exports, "StyledBarProgress", {
      enumerable: true,
      get: function() {
        return _styledComponents.StyledBarProgress;
      }
    });
    Object.defineProperty(exports, "StyledInfiniteBar", {
      enumerable: true,
      get: function() {
        return _styledComponents.StyledInfiniteBar;
      }
    });
    Object.defineProperty(exports, "StyledLabel", {
      enumerable: true,
      get: function() {
        return _styledComponents.StyledLabel;
      }
    });
    Object.defineProperty(exports, "StyledProgressBarRoundedRoot", {
      enumerable: true,
      get: function() {
        return _styledComponents.StyledProgressBarRoundedRoot;
      }
    });
    Object.defineProperty(exports, "StyledProgressBarRoundedSvg", {
      enumerable: true,
      get: function() {
        return _styledComponents.StyledProgressBarRoundedSvg;
      }
    });
    Object.defineProperty(exports, "StyledProgressBarRoundedText", {
      enumerable: true,
      get: function() {
        return _styledComponents.StyledProgressBarRoundedText;
      }
    });
    Object.defineProperty(exports, "StyledProgressBarRoundedTrackBackground", {
      enumerable: true,
      get: function() {
        return _styledComponents.StyledProgressBarRoundedTrackBackground;
      }
    });
    Object.defineProperty(exports, "StyledProgressBarRoundedTrackForeground", {
      enumerable: true,
      get: function() {
        return _styledComponents.StyledProgressBarRoundedTrackForeground;
      }
    });
    Object.defineProperty(exports, "StyledRoot", {
      enumerable: true,
      get: function() {
        return _styledComponents.StyledRoot;
      }
    });
    var _progressbar = _interopRequireDefault(require_progressbar());
    var _progressbarRounded = _interopRequireDefault(require_progressbar_rounded());
    var _constants = require_constants2();
    var _styledComponents = require_styled_components2();
    var _types = require_types2();
    Object.keys(_types).forEach(function(key) {
      if (key === "default" || key === "__esModule") return;
      if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
      if (key in exports && exports[key] === _types[key]) return;
      Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
          return _types[key];
        }
      });
    });
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
  }
});

// node_modules/baseui/spinner/constants.js
var require_constants3 = __commonJS({
  "node_modules/baseui/spinner/constants.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.SIZE = void 0;
    var SIZE = exports.SIZE = {
      small: "small",
      medium: "medium",
      large: "large"
    };
  }
});

// node_modules/baseui/spinner/styled-components.js
var require_styled_components3 = __commonJS({
  "node_modules/baseui/spinner/styled-components.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.StyledSpinner = void 0;
    var _styles = require_styles();
    var _constants = require_constants3();
    var spin = {
      from: {
        transform: "rotate(0deg)"
      },
      to: {
        transform: "rotate(360deg)"
      }
    };
    var StyledSpinner = exports.StyledSpinner = (0, _styles.styled)("i", ({
      $theme,
      $color = $theme.colors.contentAccent,
      $borderWidth,
      $size = _constants.SIZE.medium
    }) => {
      let borderSize = {
        large: $theme.sizing.scale300,
        medium: $theme.sizing.scale100,
        small: $theme.sizing.scale0
      }[$borderWidth || $size];
      let boxSize = {
        large: $theme.sizing.scale1000,
        medium: $theme.sizing.scale900,
        small: $theme.sizing.scale800
      }[$size];
      if (!borderSize) {
        borderSize = $theme.sizing[$borderWidth];
        if (!borderSize) {
          borderSize = `${parseInt($borderWidth)}px`;
        }
      }
      if (!boxSize) {
        boxSize = $theme.sizing[$size];
        if (!boxSize) {
          boxSize = `${parseInt($size)}px`;
        }
      }
      return {
        display: "block",
        animationName: spin,
        animationDuration: $theme.animation.timing1000,
        animationIterationCount: "infinite",
        animationTimingFunction: "linear",
        borderLeftStyle: "solid",
        borderRightStyle: "solid",
        borderTopStyle: "solid",
        borderBottomStyle: "solid",
        borderRadius: "50%",
        borderTopColor: $color,
        borderRightColor: $theme.colors.backgroundTertiary,
        borderBottomColor: $theme.colors.backgroundTertiary,
        borderLeftColor: $theme.colors.backgroundTertiary,
        borderLeftWidth: borderSize,
        borderRightWidth: borderSize,
        borderTopWidth: borderSize,
        borderBottomWidth: borderSize,
        width: boxSize,
        height: boxSize,
        cursor: "wait"
      };
    });
    StyledSpinner.displayName = "StyledSpinner";
  }
});

// node_modules/baseui/spinner/types.js
var require_types3 = __commonJS({
  "node_modules/baseui/spinner/types.js"() {
    "use strict";
  }
});

// node_modules/baseui/spinner/index.js
var require_spinner = __commonJS({
  "node_modules/baseui/spinner/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _exportNames = {
      Spinner: true,
      SIZE: true
    };
    Object.defineProperty(exports, "SIZE", {
      enumerable: true,
      get: function() {
        return _constants.SIZE;
      }
    });
    exports.Spinner = void 0;
    var _react = _interopRequireDefault(require_react());
    var _styledComponents = require_styled_components3();
    var _constants = require_constants3();
    var _types = require_types3();
    Object.keys(_types).forEach(function(key) {
      if (key === "default" || key === "__esModule") return;
      if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
      if (key in exports && exports[key] === _types[key]) return;
      Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
          return _types[key];
        }
      });
    });
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _extends2() {
      _extends2 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends2.apply(this, arguments);
    }
    var Spinner = (props) => {
      return _react.default.createElement(_styledComponents.StyledSpinner, _extends2({
        role: "progressbar",
        "aria-label": "loading",
        "aria-busy": "true"
      }, props));
    };
    exports.Spinner = Spinner;
    Spinner.displayName = "StyledSpinner";
    Spinner.__STYLETRON__ = _styledComponents.StyledSpinner.__STYLETRON__;
  }
});

// node_modules/baseui/file-uploader-basic/styled-components.js
var require_styled_components4 = __commonJS({
  "node_modules/baseui/file-uploader-basic/styled-components.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.StyledRoot = exports.StyledHiddenInput = exports.StyledFileDragAndDrop = exports.StyledErrorMessage = exports.StyledContentSeparator = exports.StyledContentMessage = void 0;
    var _styles = require_styles();
    var StyledFileDragAndDrop = exports.StyledFileDragAndDrop = (0, _styles.styled)("div", (props) => {
      const borderColor = props.$isDragActive ? props.$theme.colors.borderAccent : props.$theme.colors.fileUploaderBorderColorDefault;
      const borderStyle = props.$afterFileDrop ? "none" : "dashed";
      return {
        alignItems: "center",
        backgroundColor: props.$isDragActive ? props.$theme.colors.backgroundAccentLight : props.$theme.colors.fileUploaderBackgroundColor,
        borderLeftColor: borderColor,
        borderRightColor: borderColor,
        borderTopColor: borderColor,
        borderBottomColor: borderColor,
        borderLeftStyle: borderStyle,
        borderRightStyle: borderStyle,
        borderTopStyle: borderStyle,
        borderBottomStyle: borderStyle,
        borderLeftWidth: props.$theme.sizing.scale0,
        borderRightWidth: props.$theme.sizing.scale0,
        borderTopWidth: props.$theme.sizing.scale0,
        borderBottomWidth: props.$theme.sizing.scale0,
        borderTopLeftRadius: props.$theme.borders.radius400,
        borderTopRightRadius: props.$theme.borders.radius400,
        borderBottomLeftRadius: props.$theme.borders.radius400,
        borderBottomRightRadius: props.$theme.borders.radius400,
        boxSizing: "border-box",
        display: "flex",
        flexDirection: "column",
        outline: "none",
        paddingTop: props.$theme.sizing.scale900,
        paddingRight: props.$theme.sizing.scale800,
        paddingBottom: props.$afterFileDrop ? props.$theme.sizing.scale300 : props.$theme.sizing.scale900,
        paddingLeft: props.$theme.sizing.scale800,
        width: "100%"
      };
    });
    StyledFileDragAndDrop.displayName = "StyledFileDragAndDrop";
    StyledFileDragAndDrop.displayName = "StyledFileDragAndDrop";
    var StyledContentMessage = exports.StyledContentMessage = (0, _styles.styled)(
      "div",
      // @ts-ignore
      ({
        $theme,
        $afterFileDrop,
        $isDragActive
      }) => ({
        ...$afterFileDrop ? $theme.typography.LabelMedium : $theme.typography.LabelSmall,
        color: $afterFileDrop ? $theme.colors.contentPrimary : $isDragActive ? $theme.colors.contentAccent : null,
        marginTop: $afterFileDrop ? $theme.sizing.scale100 : null,
        marginBottom: $afterFileDrop ? $theme.sizing.scale100 : null
      })
    );
    StyledContentMessage.displayName = "StyledContentMessage";
    StyledContentMessage.displayName = "StyledContentMessage";
    var StyledContentSeparator = exports.StyledContentSeparator = StyledContentMessage;
    var StyledErrorMessage = exports.StyledErrorMessage = (0, _styles.styled)("div", (props) => ({
      ...props.$theme.typography.LabelMedium,
      color: props.$theme.colors.contentNegative,
      marginTop: props.$afterFileDrop ? props.$theme.sizing.scale100 : null,
      marginBottom: props.$afterFileDrop ? props.$theme.sizing.scale100 : null
    }));
    StyledErrorMessage.displayName = "StyledErrorMessage";
    StyledErrorMessage.displayName = "StyledErrorMessage";
    var StyledRoot = exports.StyledRoot = (0, _styles.styled)("div", (props) => ({
      ...props.$theme.typography.font300,
      color: props.$theme.colors.fileUploaderMessageColor
    }));
    StyledRoot.displayName = "StyledRoot";
    StyledRoot.displayName = "StyledRoot";
    var StyledHiddenInput = exports.StyledHiddenInput = (0, _styles.styled)("input", {});
    StyledHiddenInput.displayName = "StyledHiddenInput";
    StyledHiddenInput.displayName = "StyledHiddenInput";
  }
});

// node_modules/baseui/file-uploader-basic/file-uploader-basic.js
var require_file_uploader_basic = __commonJS({
  "node_modules/baseui/file-uploader-basic/file-uploader-basic.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var React2 = _interopRequireWildcard(require_react());
    var _reactDropzone = _interopRequireDefault((init_es(), __toCommonJS(es_exports)));
    var _locale = require_locale();
    var _styles = require_styles();
    var _button = require_button2();
    var _overrides = require_overrides();
    var _progressBar = require_progress_bar();
    var _spinner = require_spinner();
    var _styledComponents = require_styled_components4();
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _getRequireWildcardCache(e) {
      if ("function" != typeof WeakMap) return null;
      var r = /* @__PURE__ */ new WeakMap(), t = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function(e2) {
        return e2 ? t : r;
      })(e);
    }
    function _interopRequireWildcard(e, r) {
      if (!r && e && e.__esModule) return e;
      if (null === e || "object" != typeof e && "function" != typeof e) return { default: e };
      var t = _getRequireWildcardCache(r);
      if (t && t.has(e)) return t.get(e);
      var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
      return n.default = e, t && t.set(e, n), n;
    }
    function _extends2() {
      _extends2 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends2.apply(this, arguments);
    }
    function prependStyleProps(styleProps) {
      return Object.keys(styleProps).reduce((nextStyleProps, currentKey) => {
        nextStyleProps[`$${currentKey}`] = styleProps[currentKey];
        return nextStyleProps;
      }, {});
    }
    function FileUploaderBasic(props) {
      const {
        overrides = {}
      } = props;
      const [, theme] = (0, _styles.useStyletron)();
      const [Root, rootProps] = (0, _overrides.getOverrides)(overrides.Root, _styledComponents.StyledRoot);
      const [FileDragAndDrop, fileDragAndDropProps] = (0, _overrides.getOverrides)(overrides.FileDragAndDrop, _styledComponents.StyledFileDragAndDrop);
      const [ContentMessage, contentMessageProps] = (0, _overrides.getOverrides)(overrides.ContentMessage, _styledComponents.StyledContentMessage);
      const [ContentSeparator, contentSeparatorProps] = (0, _overrides.getOverrides)(overrides.ContentSeparator, _styledComponents.StyledContentSeparator);
      const [ErrorMessage, errorMessageProps] = (0, _overrides.getOverrides)(overrides.ErrorMessage, _styledComponents.StyledErrorMessage);
      const [HiddenInput, hiddenInputProps] = (0, _overrides.getOverrides)(overrides.HiddenInput, _styledComponents.StyledHiddenInput);
      const [ButtonComponent, buttonProps] = (0, _overrides.getOverrides)(overrides.ButtonComponent, _button.Button);
      const [RetryButtonComponent, retryButtonProps] = (0, _overrides.getOverrides)(overrides.RetryButtonComponent, _button.Button);
      const [CancelButtonComponent, cancelButtonProps] = (0, _overrides.getOverrides)(overrides.CancelButtonComponent, _button.Button);
      const [SpinnerComponent, spinnerProps] = (0, _overrides.getOverrides)(overrides.Spinner, _spinner.Spinner);
      const [ProgressBarComponent, progressBarProps] = (0, _overrides.getOverrides)(overrides.ProgressBar, _progressBar.ProgressBar);
      const afterFileDrop = !!(props.progressAmount || props.progressMessage || props.errorMessage);
      let accept;
      if (Array.isArray(props.accept)) {
        accept = props.accept.join(",");
      } else if (typeof props.accept === "string") {
        accept = props.accept;
      }
      let displayButtonIcon = null;
      if (props.buttonIcon) {
        displayButtonIcon = props.buttonIcon();
      }
      return React2.createElement(_reactDropzone.default, _extends2({}, props, {
        accept,
        disabled: props.disabled || afterFileDrop
      }), (renderProps) => {
        const {
          getRootProps,
          getInputProps,
          open,
          ...styleProps
        } = renderProps;
        const prefixedStyledProps = prependStyleProps({
          ...styleProps,
          isDisabled: props.disabled,
          afterFileDrop
        });
        const getRootPropsArgs = {
          ...props.disableClick ? {
            onClick: (evt) => evt.preventDefault()
          } : {},
          tabIndex: -1
        };
        return React2.createElement(_locale.LocaleContext.Consumer, null, (locale) => React2.createElement(Root, _extends2({
          "data-baseweb": "file-uploader-basic"
        }, prefixedStyledProps, rootProps), React2.createElement(FileDragAndDrop, _extends2({}, getRootProps(getRootPropsArgs), prefixedStyledProps, fileDragAndDropProps), !afterFileDrop && React2.createElement(React2.Fragment, null, props.swapButtonAndMessage ? React2.createElement(React2.Fragment, null, React2.createElement(ButtonComponent, _extends2({
          disabled: props.disabled,
          kind: _button.KIND.secondary,
          shape: _button.SHAPE.pill,
          size: _button.SIZE.compact,
          onClick: open,
          role: "button",
          overrides: {
            BaseButton: {
              // @ts-ignore
              style: ({
                $theme
              }) => ({
                display: "flex",
                flexDirection: "row",
                gap: "8px",
                marginTop: $theme.sizing.scale500
              })
            }
          }
        }, prefixedStyledProps, buttonProps), displayButtonIcon, props.buttonText ? props.buttonText : locale.fileuploaderbasic.browseFiles), React2.createElement(ContentSeparator, _extends2({}, prefixedStyledProps, contentSeparatorProps), locale.fileuploaderbasic.or), React2.createElement(ContentMessage, _extends2({}, prefixedStyledProps, contentMessageProps), props.contentMessage ? props.contentMessage : locale.fileuploaderbasic.dropFilesToUpload)) : React2.createElement(React2.Fragment, null, React2.createElement(ContentMessage, _extends2({}, prefixedStyledProps, contentMessageProps), props.contentMessage ? props.contentMessage : locale.fileuploaderbasic.dropFilesToUpload), React2.createElement(ContentSeparator, _extends2({}, prefixedStyledProps, contentSeparatorProps), locale.fileuploaderbasic.or), React2.createElement(ButtonComponent, _extends2({
          disabled: props.disabled,
          kind: _button.KIND.secondary,
          shape: _button.SHAPE.pill,
          size: _button.SIZE.compact,
          onClick: open,
          role: "button",
          overrides: {
            BaseButton: {
              // @ts-ignore
              style: ({
                $theme
              }) => ({
                display: "flex",
                flexDirection: "row",
                gap: "8px",
                marginTop: $theme.sizing.scale500
              })
            }
          }
        }, prefixedStyledProps, buttonProps), displayButtonIcon, props.buttonText ? props.buttonText : locale.fileuploaderbasic.browseFiles))), afterFileDrop && React2.createElement(React2.Fragment, null, typeof props.progressAmount === "number" ? React2.createElement(ProgressBarComponent, _extends2({
          value: props.progressAmount,
          overrides: {
            BarProgress: {
              // @ts-ignore
              style: ({
                $theme
              }) => ({
                backgroundColor: props.errorMessage ? $theme.colors.negative : $theme.colors.accent
              })
            }
          }
        }, progressBarProps)) : props.errorMessage ? null : React2.createElement(SpinnerComponent, _extends2({
          $size: _spinner.SIZE.medium,
          $style: {
            marginBottom: theme.sizing.scale300
          }
        }, spinnerProps)), (props.errorMessage || props.progressMessage) && props.errorMessage ? React2.createElement(ErrorMessage, _extends2({}, prefixedStyledProps, errorMessageProps), props.errorMessage) : React2.createElement(ContentMessage, _extends2({}, prefixedStyledProps, contentMessageProps), props.progressMessage), props.errorMessage ? React2.createElement(RetryButtonComponent, _extends2({
          kind: _button.KIND.tertiary,
          onClick: () => {
            props.onRetry && props.onRetry();
          },
          "aria-invalid": Boolean(props.errorMessage),
          "aria-describedby": props["aria-describedby"],
          "aria-errormessage": props.errorMessage
        }, retryButtonProps), locale.fileuploaderbasic.retry) : React2.createElement(CancelButtonComponent, _extends2({
          kind: _button.KIND.tertiary,
          onClick: () => {
            props.onCancel && props.onCancel();
          },
          "aria-describedby": props["aria-describedby"],
          overrides: {
            BaseButton: {
              // @ts-ignore
              style: ({
                $theme
              }) => ({
                color: $theme.colors.contentNegative
              })
            }
          }
        }, cancelButtonProps), locale.fileuploaderbasic.cancel))), React2.createElement(HiddenInput, _extends2({
          "aria-invalid": Boolean(props.errorMessage) || null,
          "aria-describedby": props["aria-describedby"],
          "aria-errormessage": props.errorMessage || null
        }, getInputProps(), prefixedStyledProps, hiddenInputProps))));
      });
    }
    FileUploaderBasic.defaultProps = {
      disableClick: true,
      overrides: {}
    };
    var _default = exports.default = FileUploaderBasic;
  }
});

// node_modules/baseui/file-uploader-basic/types.js
var require_types4 = __commonJS({
  "node_modules/baseui/file-uploader-basic/types.js"() {
    "use strict";
  }
});

// node_modules/baseui/file-uploader-basic/index.js
var require_file_uploader_basic2 = __commonJS({
  "node_modules/baseui/file-uploader-basic/index.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _exportNames = {
      FileUploaderBasic: true,
      StyledRoot: true,
      StyledFileDragAndDrop: true,
      StyledContentMessage: true,
      StyledContentSeparator: true,
      StyledErrorMessage: true,
      StyledHiddenInput: true
    };
    Object.defineProperty(exports, "FileUploaderBasic", {
      enumerable: true,
      get: function() {
        return _fileUploaderBasic.default;
      }
    });
    Object.defineProperty(exports, "StyledContentMessage", {
      enumerable: true,
      get: function() {
        return _styledComponents.StyledContentMessage;
      }
    });
    Object.defineProperty(exports, "StyledContentSeparator", {
      enumerable: true,
      get: function() {
        return _styledComponents.StyledContentSeparator;
      }
    });
    Object.defineProperty(exports, "StyledErrorMessage", {
      enumerable: true,
      get: function() {
        return _styledComponents.StyledErrorMessage;
      }
    });
    Object.defineProperty(exports, "StyledFileDragAndDrop", {
      enumerable: true,
      get: function() {
        return _styledComponents.StyledFileDragAndDrop;
      }
    });
    Object.defineProperty(exports, "StyledHiddenInput", {
      enumerable: true,
      get: function() {
        return _styledComponents.StyledHiddenInput;
      }
    });
    Object.defineProperty(exports, "StyledRoot", {
      enumerable: true,
      get: function() {
        return _styledComponents.StyledRoot;
      }
    });
    var _fileUploaderBasic = _interopRequireDefault(require_file_uploader_basic());
    var _styledComponents = require_styled_components4();
    var _types = require_types4();
    Object.keys(_types).forEach(function(key) {
      if (key === "default" || key === "__esModule") return;
      if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
      if (key in exports && exports[key] === _types[key]) return;
      Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
          return _types[key];
        }
      });
    });
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
  }
});

// node_modules/baseui/file-uploader/styled-components.js
var require_styled_components5 = __commonJS({
  "node_modules/baseui/file-uploader/styled-components.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.StyledParentRoot = exports.StyledLabel = exports.StyledItemPreviewContainer = exports.StyledImagePreviewThumbnail = exports.StyledHint = exports.StyledFileRows = exports.StyledFileRowUploadText = exports.StyledFileRowUploadMessage = exports.StyledFileRowText = exports.StyledFileRowFileName = exports.StyledFileRowContent = exports.StyledFileRowColumn = exports.StyledFileRow = void 0;
    var _styles = require_styles();
    var StyledFileRow = exports.StyledFileRow = (0, _styles.styled)("li", (props) => {
      const {
        $theme: {
          animation,
          sizing
        }
      } = props;
      return {
        animationDuration: animation.timing400,
        animationFillMode: "forwards",
        animationIterationCount: 1,
        animationTimingFunction: animation.easeOutQuinticCurve,
        animationName: {
          "0%": {
            transform: "translateY(-32px)",
            opacity: 0
          },
          "50%": {
            opacity: 1
          },
          "100%": {
            transform: "translateY(0px)",
            opacity: 1
          }
        },
        paddingTop: sizing.scale500,
        paddingRight: sizing.scale500,
        paddingBottom: sizing.scale500,
        paddingLeft: sizing.scale500,
        gap: sizing.scale500,
        height: "fit-content",
        display: "flex",
        alignItems: "center"
      };
    });
    StyledFileRow.displayName = "StyledFileRow";
    StyledFileRow.displayName = "StyledFileRow";
    var StyledFileRowColumn = exports.StyledFileRowColumn = (0, _styles.styled)("div", () => {
      return {
        alignItems: "center",
        display: "flex",
        flexDirection: "column",
        width: "100%",
        height: "100%",
        justifyContent: "space-between",
        flexGrow: 1,
        overflow: "auto"
      };
    });
    StyledFileRowColumn.displayName = "StyledFileRowColumn";
    StyledFileRowColumn.displayName = "StyledFileRowColumn";
    var StyledFileRowContent = exports.StyledFileRowContent = (0, _styles.styled)("div", (props) => {
      const {
        $theme: {
          sizing
        }
      } = props;
      return {
        alignItems: "center",
        display: "flex",
        flexDirection: "row",
        gap: sizing.scale500,
        justifyContent: "space-between",
        width: "100%",
        height: sizing.scale1000
      };
    });
    StyledFileRowContent.displayName = "StyledFileRowContent";
    StyledFileRowContent.displayName = "StyledFileRowContent";
    var StyledFileRowFileName = exports.StyledFileRowFileName = (0, _styles.styled)("div", (props) => {
      const {
        $theme: {
          colors,
          typography
        }
      } = props;
      return {
        ...typography.LabelSmall,
        color: colors.contentPrimary,
        width: "100%",
        textOverflow: "ellipsis",
        overflow: "hidden",
        whiteSpace: "nowrap"
      };
    });
    StyledFileRowFileName.displayName = "StyledFileRowFileName";
    StyledFileRowColumn.displayName = "StyledFileRowColumn";
    var StyledFileRowText = exports.StyledFileRowText = (0, _styles.styled)("div", (props) => {
      const {
        $theme: {
          sizing
        }
      } = props;
      return {
        display: "flex",
        flexDirection: "column",
        height: "100%",
        width: "100%",
        gap: sizing.scale0,
        flexGrow: 1,
        overflow: "auto"
      };
    });
    StyledFileRowText.displayName = "StyledFileRowText";
    StyledFileRowColumn.displayName = "StyledFileRowColumn";
    var StyledFileRowUploadMessage = exports.StyledFileRowUploadMessage = (0, _styles.styled)("div", (props) => {
      const {
        $color,
        $theme: {
          sizing,
          typography
        }
      } = props;
      return {
        ...typography.ParagraphXSmall,
        color: $color,
        alignItems: "center",
        gap: sizing.scale100,
        display: "flex",
        flexDirection: "row"
      };
    });
    StyledFileRowUploadMessage.displayName = "StyledFileRowUploadMessage";
    StyledFileRowUploadMessage.displayName = "StyledFileRowUploadMessage";
    var StyledFileRowUploadText = exports.StyledFileRowUploadText = (0, _styles.styled)("div", (props) => {
      const {
        $color
      } = props;
      return {
        color: $color ? $color : "inherit",
        width: "100%",
        textOverflow: "ellipsis",
        overflow: "hidden",
        whiteSpace: "nowrap"
      };
    });
    StyledFileRowUploadText.displayName = "StyledFileRowUploadText";
    StyledFileRowUploadText.displayName = "StyledFileRowUploadText";
    var StyledFileRows = exports.StyledFileRows = (0, _styles.styled)("ul", (props) => {
      const {
        $theme: {
          animation,
          borders,
          sizing
        }
      } = props;
      return {
        animationDuration: animation.timing500,
        animationIterationCount: 1,
        animationTimingFunction: animation.easeInOutQuinticCurve,
        animationName: {
          "0%": {
            transform: "translateY(-32px)"
          },
          "100%": {
            transform: "translateX(-0px)"
          }
        },
        ...borders.border200,
        borderRadius: borders.radius400,
        borderWidth: sizing.scale0,
        listStyle: "none",
        padding: 0,
        marginTop: 0,
        marginBottom: sizing.scale300
      };
    });
    StyledFileRows.displayName = "StyledFileRows";
    StyledFileRows.displayName = "StyledFileRows";
    var StyledHint = exports.StyledHint = (0, _styles.styled)("div", (props) => {
      const {
        $fileCount,
        $theme: {
          animation,
          colors,
          typography
        }
      } = props;
      let fontColor = colors.contentTertiary;
      const animations = $fileCount > 0 ? {
        animationDuration: animation.timing500,
        animationIterationCount: 1,
        animationTimingFunction: animation.easeInOutQuinticCurve,
        animationName: {
          "0%": {
            transform: "translateY(-32px)"
          },
          "100%": {
            transform: "translateX(-0px)"
          }
        }
      } : {};
      return {
        ...animations,
        ...typography.ParagraphSmall,
        color: fontColor
      };
    });
    StyledHint.displayName = "StyledHint";
    StyledHint.displayName = "StyledHint";
    var StyledImagePreviewThumbnail = exports.StyledImagePreviewThumbnail = (0, _styles.styled)("img", (props) => {
      const {
        $alt,
        $src,
        $theme: {
          borders,
          colors
        }
      } = props;
      return {
        alt: $alt,
        borderRadius: borders.radius300,
        outline: `1px ${colors.borderTransparent}`,
        className: "thumb",
        src: $src,
        width: "100%",
        height: "100%",
        objectFit: "cover"
      };
    });
    StyledImagePreviewThumbnail.displayName = "StyledImagePreviewThumbnail";
    StyledImagePreviewThumbnail.displayName = "StyledImagePreviewThumbnail";
    var StyledItemPreviewContainer = exports.StyledItemPreviewContainer = (0, _styles.styled)("div", (props) => {
      const {
        $theme: {
          sizing
        }
      } = props;
      return {
        display: "flex",
        alignItems: "center",
        justifyContent: "center",
        flexShrink: 0,
        width: sizing.scale1200,
        height: sizing.scale1200
      };
    });
    StyledItemPreviewContainer.displayName = "StyledItemPreviewContainer";
    StyledItemPreviewContainer.displayName = "StyledItemPreviewContainer";
    var StyledLabel = exports.StyledLabel = (0, _styles.styled)("label", (props) => {
      const {
        $disabled,
        $theme: {
          colors,
          sizing,
          typography
        }
      } = props;
      return {
        ...typography.LabelSmall,
        width: "100%",
        color: $disabled ? colors.contentStateDisabled : colors.contentPrimary,
        display: "block",
        marginBottom: sizing.scale300
      };
    });
    StyledLabel.displayName = "StyledLabel";
    StyledLabel.displayName = "StyledLabel";
    var StyledParentRoot = exports.StyledParentRoot = (0, _styles.styled)("div", () => {
      return {
        display: "flex",
        flexDirection: "column"
      };
    });
    StyledParentRoot.displayName = "StyledParentRoot";
    StyledParentRoot.displayName = "StyledParentRoot";
  }
});

// node_modules/baseui/file-uploader/constants.js
var require_constants4 = __commonJS({
  "node_modules/baseui/file-uploader/constants.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.PROGRESS_AMOUNT_LOADING_COMPLETE = exports.PROGRESS_AMOUNT_LOADING = exports.FILE_STATUS_TO_COLOR_MAP = exports.FILE_STATUS = exports.ARIA_LIVE_TIMEOUT_MS = exports.ARIA_LIVE_ELEMENT_ID = void 0;
    var FILE_STATUS = exports.FILE_STATUS = {
      added: "added",
      error: "error",
      processed: "processed"
    };
    var FILE_STATUS_TO_COLOR_MAP = ($theme) => ({
      [FILE_STATUS.added]: $theme.colors.accent,
      [FILE_STATUS.error]: $theme.colors.negative,
      [FILE_STATUS.processed]: $theme.colors.positive
    });
    exports.FILE_STATUS_TO_COLOR_MAP = FILE_STATUS_TO_COLOR_MAP;
    var ARIA_LIVE_ELEMENT_ID = exports.ARIA_LIVE_ELEMENT_ID = (function(ARIA_LIVE_ELEMENT_ID2) {
      ARIA_LIVE_ELEMENT_ID2["ADDITION"] = "file-uploader-addition";
      ARIA_LIVE_ELEMENT_ID2["REMOVAL"] = "file-uploader-removal";
      return ARIA_LIVE_ELEMENT_ID2;
    })({});
    var ARIA_LIVE_TIMEOUT_MS = exports.ARIA_LIVE_TIMEOUT_MS = 5e3;
    var PROGRESS_AMOUNT_LOADING = exports.PROGRESS_AMOUNT_LOADING = 20;
    var PROGRESS_AMOUNT_LOADING_COMPLETE = exports.PROGRESS_AMOUNT_LOADING_COMPLETE = 100;
  }
});

// node_modules/baseui/file-uploader/utils.js
var require_utils2 = __commonJS({
  "node_modules/baseui/file-uploader/utils.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.handleAriaLiveUpdates = exports.formatBytes = exports.destructureStyleOverride = void 0;
    var _constants = require_constants4();
    var destructureStyleOverride = (styleOverride, theme) => {
      if (typeof styleOverride === "function") {
        return styleOverride({
          $theme: theme
        });
      } else {
        return styleOverride;
      }
    };
    exports.destructureStyleOverride = destructureStyleOverride;
    var formatBytes = (bytes) => {
      if (bytes === 0) return "0 bytes";
      const k = 1e3;
      const sizes = ["bytes", "KB", "MB", "GB", "TB", "PB", "EB", "ZB", "YB"];
      const i = Math.floor(Math.log(bytes) / Math.log(k));
      return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + " " + sizes[i];
    };
    exports.formatBytes = formatBytes;
    var handleAriaLiveUpdates = (elementId, updateMessage) => {
      const liveRegion = document.getElementById(elementId);
      if (liveRegion) {
        liveRegion.textContent = updateMessage;
      }
      setTimeout(() => {
        const liveRegion2 = document.getElementById(elementId);
        if (liveRegion2) {
          liveRegion2.textContent = null;
        }
      }, _constants.ARIA_LIVE_TIMEOUT_MS);
    };
    exports.handleAriaLiveUpdates = handleAriaLiveUpdates;
  }
});

// node_modules/baseui/icon/styled-components.js
var require_styled_components6 = __commonJS({
  "node_modules/baseui/icon/styled-components.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.Svg = void 0;
    exports.getSvgStyles = getSvgStyles;
    var _styles = require_styles();
    function getSvgStyles({
      $theme,
      $size,
      $color
    }) {
      let size = $theme.sizing.scale600;
      if ($size) {
        if ($theme.sizing[$size]) {
          size = $theme.sizing[$size];
        } else if (typeof $size === "number") {
          size = `${$size}px`;
        } else {
          size = $size;
        }
      }
      let color = "currentColor";
      if ($color) {
        if ($theme.colors[$color]) {
          color = $theme.colors[$color];
        } else {
          color = $color;
        }
      }
      return {
        display: "inline-block",
        fill: color,
        color,
        height: size,
        width: size
      };
    }
    var Svg = exports.Svg = (0, _styles.styled)("svg", getSvgStyles);
    Svg.displayName = "Svg";
    Svg.displayName = "Svg";
  }
});

// node_modules/baseui/icon/omit-dollar-prefixed-keys.js
var require_omit_dollar_prefixed_keys = __commonJS({
  "node_modules/baseui/icon/omit-dollar-prefixed-keys.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = omitDollarPrefixedKeys;
    function omitDollarPrefixedKeys(source) {
      const result = {};
      for (const key in source) {
        if (key[0] !== "$") {
          result[key] = source[key];
        }
      }
      return result;
    }
  }
});

// node_modules/baseui/icon/icon.js
var require_icon = __commonJS({
  "node_modules/baseui/icon/icon.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var React2 = _interopRequireWildcard(require_react());
    var _overrides = require_overrides();
    var _styledComponents = require_styled_components6();
    var _omitDollarPrefixedKeys = _interopRequireDefault(require_omit_dollar_prefixed_keys());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _getRequireWildcardCache(e) {
      if ("function" != typeof WeakMap) return null;
      var r = /* @__PURE__ */ new WeakMap(), t = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function(e2) {
        return e2 ? t : r;
      })(e);
    }
    function _interopRequireWildcard(e, r) {
      if (!r && e && e.__esModule) return e;
      if (null === e || "object" != typeof e && "function" != typeof e) return { default: e };
      var t = _getRequireWildcardCache(r);
      if (t && t.has(e)) return t.get(e);
      var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
      return n.default = e, t && t.set(e, n), n;
    }
    function _extends2() {
      _extends2 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends2.apply(this, arguments);
    }
    var Icon = (props, ref) => {
      const {
        children,
        title,
        size,
        color,
        overrides = {},
        ...restProps
      } = props;
      const [Svg, overrideProps] = (0, _overrides.getOverrides)(overrides.Svg, _styledComponents.Svg);
      const passThroughProps = Svg.__STYLETRON__ ? {
        title,
        $color: color,
        $size: size,
        ...restProps,
        ...overrideProps
      } : {
        title,
        color,
        size,
        ...(0, _omitDollarPrefixedKeys.default)(restProps),
        ...(0, _omitDollarPrefixedKeys.default)(overrideProps)
      };
      return React2.createElement(Svg, _extends2({
        "data-baseweb": "icon",
        ref
      }, passThroughProps), title ? React2.createElement("title", null, title) : null, children);
    };
    var _default = exports.default = React2.forwardRef(Icon);
  }
});

// node_modules/baseui/icon/circle-check-filled.js
var require_circle_check_filled = __commonJS({
  "node_modules/baseui/icon/circle-check-filled.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var React2 = _interopRequireWildcard(require_react());
    var _styles = require_styles();
    var _overrides = require_overrides();
    var _icon = _interopRequireDefault(require_icon());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _getRequireWildcardCache(e) {
      if ("function" != typeof WeakMap) return null;
      var r = /* @__PURE__ */ new WeakMap(), t = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function(e2) {
        return e2 ? t : r;
      })(e);
    }
    function _interopRequireWildcard(e, r) {
      if (!r && e && e.__esModule) return e;
      if (null === e || "object" != typeof e && "function" != typeof e) return { default: e };
      var t = _getRequireWildcardCache(r);
      if (t && t.has(e)) return t.get(e);
      var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
      return n.default = e, t && t.set(e, n), n;
    }
    function _extends2() {
      _extends2 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends2.apply(this, arguments);
    }
    function CircleCheckFilled(props, ref) {
      const [, theme] = (0, _styles.useStyletron)();
      const {
        title = "CircleCheckFilled",
        size,
        color,
        overrides = {},
        ...restProps
      } = props;
      const SvgOverride = (0, _overrides.mergeOverride)(
        // Icons from the theme target the SVG override in the underlying Icon component
        {
          component: theme.icons && theme.icons.CircleCheckFilled ? theme.icons.CircleCheckFilled : null
        },
        overrides && overrides.Svg ? (0, _overrides.toObjectOverride)(overrides.Svg) : {}
      );
      return React2.createElement(_icon.default, _extends2({
        viewBox: "0 0 24 24",
        ref,
        title,
        size,
        color,
        overrides: {
          Svg: SvgOverride
        }
      }, restProps), React2.createElement("path", {
        d: "M12 1C5.9 1 1 5.9 1 12s4.9 11 11 11 11-4.9 11-11S18.1 1 12 1Zm-1.5 16.1-5.6-5.6L7 9.4l3.4 3.4 6.4-6.4 2.1 2.1-8.4 8.6Z",
        fill: "currentColor"
      }));
    }
    var _default = exports.default = React2.forwardRef(CircleCheckFilled);
  }
});

// node_modules/baseui/icon/circle-exclamation-point-filled.js
var require_circle_exclamation_point_filled = __commonJS({
  "node_modules/baseui/icon/circle-exclamation-point-filled.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var React2 = _interopRequireWildcard(require_react());
    var _styles = require_styles();
    var _overrides = require_overrides();
    var _icon = _interopRequireDefault(require_icon());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _getRequireWildcardCache(e) {
      if ("function" != typeof WeakMap) return null;
      var r = /* @__PURE__ */ new WeakMap(), t = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function(e2) {
        return e2 ? t : r;
      })(e);
    }
    function _interopRequireWildcard(e, r) {
      if (!r && e && e.__esModule) return e;
      if (null === e || "object" != typeof e && "function" != typeof e) return { default: e };
      var t = _getRequireWildcardCache(r);
      if (t && t.has(e)) return t.get(e);
      var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
      return n.default = e, t && t.set(e, n), n;
    }
    function _extends2() {
      _extends2 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends2.apply(this, arguments);
    }
    function CircleExclamationPointFilled(props, ref) {
      const [, theme] = (0, _styles.useStyletron)();
      const {
        title = "Circle Exclamation Point Filled",
        size,
        color,
        overrides = {},
        ...restProps
      } = props;
      const SvgOverride = (0, _overrides.mergeOverride)(
        // Icons from the theme target the SVG override in the underlying Icon component
        {
          component: theme.icons && theme.icons.CircleExclamationPointFilled ? theme.icons.CircleExclamationPointFilled : null
        },
        overrides && overrides.Svg ? (0, _overrides.toObjectOverride)(overrides.Svg) : {}
      );
      return React2.createElement(_icon.default, _extends2({
        viewBox: "0 0 24 24",
        ref,
        title,
        size,
        color,
        overrides: {
          Svg: SvgOverride
        }
      }, restProps), React2.createElement("path", {
        d: "M12 23C5.9 23 1 18.1 1 12S5.9 1 12 1s11 4.9 11 11-4.9 11-11 11Zm1.5-18h-3v8h3V5ZM12 15c-1.1 0-2 .9-2 2s.9 2 2 2 2-.9 2-2-.9-2-2-2Z",
        fill: "currentColor"
      }));
    }
    var _default = exports.default = React2.forwardRef(CircleExclamationPointFilled);
  }
});

// node_modules/baseui/icon/paperclip-filled.js
var require_paperclip_filled = __commonJS({
  "node_modules/baseui/icon/paperclip-filled.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var React2 = _interopRequireWildcard(require_react());
    var _styles = require_styles();
    var _overrides = require_overrides();
    var _icon = _interopRequireDefault(require_icon());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _getRequireWildcardCache(e) {
      if ("function" != typeof WeakMap) return null;
      var r = /* @__PURE__ */ new WeakMap(), t = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function(e2) {
        return e2 ? t : r;
      })(e);
    }
    function _interopRequireWildcard(e, r) {
      if (!r && e && e.__esModule) return e;
      if (null === e || "object" != typeof e && "function" != typeof e) return { default: e };
      var t = _getRequireWildcardCache(r);
      if (t && t.has(e)) return t.get(e);
      var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
      return n.default = e, t && t.set(e, n), n;
    }
    function _extends2() {
      _extends2 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends2.apply(this, arguments);
    }
    function PaperclipFilled(props, ref) {
      const [, theme] = (0, _styles.useStyletron)();
      const {
        title = "PaperclipFilled",
        size,
        color,
        overrides = {},
        ...restProps
      } = props;
      const SvgOverride = (0, _overrides.mergeOverride)(
        // Icons from the theme target the SVG override in the underlying Icon component
        {
          component: theme.icons && theme.icons.PaperclipFilled ? theme.icons.PaperclipFilled : null
        },
        overrides && overrides.Svg ? (0, _overrides.toObjectOverride)(overrides.Svg) : {}
      );
      return React2.createElement(_icon.default, _extends2({
        viewBox: "0 0 24 24",
        ref,
        title,
        size,
        color,
        overrides: {
          Svg: SvgOverride
        }
      }, restProps), React2.createElement("path", {
        d: "M21.1 2.9c-2.54-2.52-6.66-2.52-9.2 0l-9 9c-2.85 2.87-2.21 6.97 0 9.2A6.492 6.492 0 0 0 7.5 23c.17 0 .33-.01.5-.02v-3.05c-1.06.15-2.19-.17-2.98-.96a3.5 3.5 0 0 1 0-4.94l9-9.01c1.37-1.36 3.6-1.36 4.96-.01 1.36 1.37 1.36 3.6 0 4.96l-6.21 6.21c-.38.38-1.05.38-1.43 0-.39-.39-.4-1.04 0-1.43l5.67-5.6-2.11-2.13-5.67 5.6a4.017 4.017 0 0 0-.02 5.69 4.002 4.002 0 0 0 5.67 0l6.21-6.21a6.515 6.515 0 0 0 .01-9.2Z",
        fill: "currentColor"
      }));
    }
    var _default = exports.default = React2.forwardRef(PaperclipFilled);
  }
});

// node_modules/baseui/icon/trash-can-filled.js
var require_trash_can_filled = __commonJS({
  "node_modules/baseui/icon/trash-can-filled.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var React2 = _interopRequireWildcard(require_react());
    var _styles = require_styles();
    var _overrides = require_overrides();
    var _icon = _interopRequireDefault(require_icon());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _getRequireWildcardCache(e) {
      if ("function" != typeof WeakMap) return null;
      var r = /* @__PURE__ */ new WeakMap(), t = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function(e2) {
        return e2 ? t : r;
      })(e);
    }
    function _interopRequireWildcard(e, r) {
      if (!r && e && e.__esModule) return e;
      if (null === e || "object" != typeof e && "function" != typeof e) return { default: e };
      var t = _getRequireWildcardCache(r);
      if (t && t.has(e)) return t.get(e);
      var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
      return n.default = e, t && t.set(e, n), n;
    }
    function _extends2() {
      _extends2 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends2.apply(this, arguments);
    }
    function TrashCanFilled(props, ref) {
      const [, theme] = (0, _styles.useStyletron)();
      const {
        title = "Trash Can Filled",
        size,
        color,
        overrides = {},
        ...restProps
      } = props;
      const SvgOverride = (0, _overrides.mergeOverride)(
        // Icons from the theme target the SVG override in the underlying Icon component
        {
          component: theme.icons && theme.icons.TrashCanFilled ? theme.icons.TrashCanFilled : null
        },
        overrides && overrides.Svg ? (0, _overrides.toObjectOverride)(overrides.Svg) : {}
      );
      return React2.createElement(_icon.default, _extends2({
        viewBox: "0 0 24 24",
        ref,
        title,
        size,
        color,
        overrides: {
          Svg: SvgOverride
        }
      }, restProps), React2.createElement("path", {
        fillRule: "evenodd",
        clipRule: "evenodd",
        d: "M16 1v2h5v3H3V3h5V1h8ZM5 8h14v15H5V8Z",
        fill: "currentColor"
      }));
    }
    var _default = exports.default = React2.forwardRef(TrashCanFilled);
  }
});

// node_modules/baseui/icon/upload.js
var require_upload = __commonJS({
  "node_modules/baseui/icon/upload.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = void 0;
    var React2 = _interopRequireWildcard(require_react());
    var _styles = require_styles();
    var _overrides = require_overrides();
    var _icon = _interopRequireDefault(require_icon());
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _getRequireWildcardCache(e) {
      if ("function" != typeof WeakMap) return null;
      var r = /* @__PURE__ */ new WeakMap(), t = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function(e2) {
        return e2 ? t : r;
      })(e);
    }
    function _interopRequireWildcard(e, r) {
      if (!r && e && e.__esModule) return e;
      if (null === e || "object" != typeof e && "function" != typeof e) return { default: e };
      var t = _getRequireWildcardCache(r);
      if (t && t.has(e)) return t.get(e);
      var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
      return n.default = e, t && t.set(e, n), n;
    }
    function _extends2() {
      _extends2 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends2.apply(this, arguments);
    }
    function Upload(props, ref) {
      const [, theme] = (0, _styles.useStyletron)();
      const {
        title = "Upload",
        size,
        color,
        overrides = {},
        ...restProps
      } = props;
      const SvgOverride = (0, _overrides.mergeOverride)(
        // Icons from the theme target the SVG override in the underlying Icon component
        {
          component: theme.icons && theme.icons.Upload ? theme.icons.Upload : null
        },
        overrides && overrides.Svg ? (0, _overrides.toObjectOverride)(overrides.Svg) : {}
      );
      return React2.createElement(_icon.default, _extends2({
        viewBox: "0 0 24 24",
        ref,
        title,
        size,
        color,
        overrides: {
          Svg: SvgOverride
        }
      }, restProps), React2.createElement("path", {
        fillRule: "evenodd",
        clipRule: "evenodd",
        d: "M14.5 5C12.8755 5 11.4519 5.86084 10.6609 7.15112C10.2905 7.05249 9.90137 7 9.5 7C7.14185 7 5.20752 8.81372 5.01562 11.1221C3.28247 11.5605 2 13.1304 2 15C2 17.2092 3.79077 19 6 19H11V14.4143L9.70703 15.707C9.31665 16.0977 8.68335 16.0977 8.29297 15.707C7.90234 15.3167 7.90234 14.6833 8.29297 14.293L11.293 11.293C11.6833 10.9023 12.3167 10.9023 12.707 11.293L15.707 14.293C16.0977 14.6833 16.0977 15.3167 15.707 15.707C15.3167 16.0977 14.6833 16.0977 14.293 15.707L13 14.4143V19H17C19.7615 19 22 16.7615 22 14C22 11.9492 20.7656 10.187 18.9993 9.41577C18.9543 6.96924 16.9573 5 14.5 5Z"
      }));
    }
    var _default = exports.default = React2.forwardRef(Upload);
  }
});

// node_modules/baseui/file-uploader/file-uploader.js
var require_file_uploader = __commonJS({
  "node_modules/baseui/file-uploader/file-uploader.js"(exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    exports.default = FileUploader;
    var React2 = _interopRequireWildcard(require_react());
    var _fileUploaderBasic = require_file_uploader_basic2();
    var _button = require_button2();
    var _progressBar = require_progress_bar();
    var _overrides = require_overrides();
    var _styledComponents = require_styled_components5();
    var _constants = require_constants4();
    var _utils = require_utils2();
    var _circleCheckFilled = _interopRequireDefault(require_circle_check_filled());
    var _circleExclamationPointFilled = _interopRequireDefault(require_circle_exclamation_point_filled());
    var _paperclipFilled = _interopRequireDefault(require_paperclip_filled());
    var _trashCanFilled = _interopRequireDefault(require_trash_can_filled());
    var _upload = _interopRequireDefault(require_upload());
    var _styles = require_styles();
    var _locale = require_locale();
    var _reactUid = (init_es2015(), __toCommonJS(es2015_exports));
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
    function _getRequireWildcardCache(e) {
      if ("function" != typeof WeakMap) return null;
      var r = /* @__PURE__ */ new WeakMap(), t = /* @__PURE__ */ new WeakMap();
      return (_getRequireWildcardCache = function(e2) {
        return e2 ? t : r;
      })(e);
    }
    function _interopRequireWildcard(e, r) {
      if (!r && e && e.__esModule) return e;
      if (null === e || "object" != typeof e && "function" != typeof e) return { default: e };
      var t = _getRequireWildcardCache(r);
      if (t && t.has(e)) return t.get(e);
      var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor;
      for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) {
        var i = a ? Object.getOwnPropertyDescriptor(e, u) : null;
        i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u];
      }
      return n.default = e, t && t.set(e, n), n;
    }
    function _extends2() {
      _extends2 = Object.assign ? Object.assign.bind() : function(target) {
        for (var i = 1; i < arguments.length; i++) {
          var source = arguments[i];
          for (var key in source) {
            if (Object.prototype.hasOwnProperty.call(source, key)) {
              target[key] = source[key];
            }
          }
        }
        return target;
      };
      return _extends2.apply(this, arguments);
    }
    function FileUploader(props) {
      if (props["onDrop"]) {
        console.error("onDrop is not a prop for FileUploader.");
      }
      if (props["onDropAccepted"]) {
        console.error("onDropAccepted is not a prop for FileUploader.");
      }
      if (props["onDropRejected"]) {
        console.error("onDropRejected is not a prop for FileUploader.");
      }
      if (props["progressAmount"]) {
        console.error("progressAmount is not a prop for FileUploader.");
      }
      const {
        fileRows,
        hint,
        itemPreview,
        label,
        maxFiles,
        overrides = {},
        processFileOnDrop,
        progressAmountStartValue,
        setFileRows,
        ...fileUploaderBasicProps
      } = props;
      const {
        // Overrides for FileUploader
        CircleCheckFilledIcon: OverridesCircleCheckFilledIcon,
        CircleExclamationPointFilledIcon: OverridesCircleExclamationPointFilledIcon,
        DeleteButtonComponent: OverridesDeleteButtonComponent,
        FileRow: OverridesFileRow,
        FileRowColumn: OverridesFileRowColumn,
        FileRowContent: OverridesFileRowContent,
        FileRowFileName: OverridesFileRowFileName,
        FileRowText: OverridesFileRowText,
        FileRowUploadMessage: OverridesFileRowUploadMessage,
        FileRowUploadText: OverridesFileRowUploadText,
        FileRows: OverridesFileRows,
        Hint: OverridesHint,
        ImagePreviewThumbnail: OverridesImagePreviewThumbnail,
        ItemPreviewContainer: OverridesItemPreviewContainer,
        Label: OverridesLabel,
        PaperclipFilledIcon: OverridesPaperclipFilledIcon,
        ParentRoot: OverridesParentRoot,
        TrashCanFilledIcon: OverridesTrashCanFilledIcon,
        // Overrides for FileUploaderBasic that are modified in this file
        ButtonComponent,
        ContentMessage,
        FileDragAndDrop,
        ...fileUploaderBasicOverrides
      } = overrides;
      const [css, theme] = (0, _styles.useStyletron)();
      const [CircleCheckFilledIcon, circleCheckFilledIconProps] = (0, _overrides.getOverrides)(overrides.CircleCheckFilledIcon, _circleCheckFilled.default);
      const [CircleExclamationPointFilledIcon, circleExclamationPointFilledIconProps] = (0, _overrides.getOverrides)(OverridesCircleExclamationPointFilledIcon, _circleExclamationPointFilled.default);
      const [PaperclipFilledIcon, paperclipFilledIconProps] = (0, _overrides.getOverrides)(OverridesPaperclipFilledIcon, _paperclipFilled.default);
      const [TrashCanFilledIcon, trashCanFilledIconProps] = (0, _overrides.getOverrides)(OverridesTrashCanFilledIcon, _trashCanFilled.default);
      const [DeleteButtonComponent, deleteButtonProps] = (0, _overrides.getOverrides)(OverridesDeleteButtonComponent, _button.Button);
      const [ProgressBarComponent, progressBarProps] = (0, _overrides.getOverrides)(overrides.ProgressBar, _progressBar.ProgressBar);
      const [FileRow, fileRowProps] = (0, _overrides.getOverrides)(OverridesFileRow, _styledComponents.StyledFileRow);
      const [FileRowColumn, fileRowColumnProps] = (0, _overrides.getOverrides)(OverridesFileRowColumn, _styledComponents.StyledFileRowColumn);
      const [FileRowContent, fileRowContentProps] = (0, _overrides.getOverrides)(OverridesFileRowContent, _styledComponents.StyledFileRowContent);
      const [FileRowFileName, fileRowFileNameProps] = (0, _overrides.getOverrides)(OverridesFileRowFileName, _styledComponents.StyledFileRowFileName);
      const [FileRowText, fileRowTextProps] = (0, _overrides.getOverrides)(OverridesFileRowText, _styledComponents.StyledFileRowText);
      const [FileRowUploadMessage, fileRowUploadMessageProps] = (0, _overrides.getOverrides)(OverridesFileRowUploadMessage, _styledComponents.StyledFileRowUploadMessage);
      const [FileRowUploadText, fileRowUploadTextProps] = (0, _overrides.getOverrides)(OverridesFileRowUploadText, _styledComponents.StyledFileRowUploadText);
      const [FileRows, fileRowsProps] = (0, _overrides.getOverrides)(OverridesFileRows, _styledComponents.StyledFileRows);
      const [Hint, hintProps] = (0, _overrides.getOverrides)(OverridesHint, _styledComponents.StyledHint);
      const [ImagePreviewThumbnail, imagePreviewThumbnailProps] = (0, _overrides.getOverrides)(OverridesImagePreviewThumbnail, _styledComponents.StyledImagePreviewThumbnail);
      const [ItemPreviewContainer, itemPreviewContainerProps] = (0, _overrides.getOverrides)(OverridesItemPreviewContainer, _styledComponents.StyledItemPreviewContainer);
      const [Label, labelProps] = (0, _overrides.getOverrides)(OverridesLabel, _styledComponents.StyledLabel);
      const [ParentRoot, parentRootProps] = (0, _overrides.getOverrides)(OverridesParentRoot, _styledComponents.StyledParentRoot);
      const onDrop = React2.useCallback((acceptedFiles, rejectedFiles) => {
        const newFiles = acceptedFiles.concat(rejectedFiles);
        let newFileRows = [...props.fileRows];
        newFiles.forEach((file) => {
          newFileRows.push({
            errorMessage: null,
            file,
            id: (0, _reactUid.uid)(file),
            imagePreviewThumbnail: "",
            progressAmount: progressAmountStartValue ?? _constants.PROGRESS_AMOUNT_LOADING,
            status: _constants.FILE_STATUS.added
          });
          props.setFileRows([...newFileRows]);
        });
        newFileRows.forEach((fileRow, index) => {
          if (fileRow.status === _constants.FILE_STATUS.added) {
            let reader = new FileReader();
            reader.onerror = () => {
              newFileRows[index].errorMessage = "cannot read file";
              newFileRows[index].status = _constants.FILE_STATUS.error;
              newFileRows[index].progressAmount = _constants.PROGRESS_AMOUNT_LOADING_COMPLETE;
              (0, _utils.handleAriaLiveUpdates)(_constants.ARIA_LIVE_ELEMENT_ID.ADDITION, `${newFileRows[index].file.name} added, upload failed: ${newFileRows[index].errorMessage}`);
              props.setFileRows([...newFileRows]);
            };
            reader.onload = (event) => {
              var _a;
              if (newFileRows[index].file.type.startsWith("image/")) {
                newFileRows[index].imagePreviewThumbnail = (_a = event.target) == null ? void 0 : _a.result;
                props.setFileRows([...newFileRows]);
              }
              if (props.maxFiles !== void 0 && Number.isInteger(props.maxFiles) && index >= props.maxFiles) {
                newFileRows[index].errorMessage = `cannot process more than ${props.maxFiles} file(s)`;
                newFileRows[index].status = _constants.FILE_STATUS.error;
                newFileRows[index].progressAmount = _constants.PROGRESS_AMOUNT_LOADING_COMPLETE;
                (0, _utils.handleAriaLiveUpdates)(_constants.ARIA_LIVE_ELEMENT_ID.ADDITION, `${newFileRows[index].file.name} added, upload failed: ${newFileRows[index].errorMessage}`);
                props.setFileRows([...newFileRows]);
              } else if (props.minSize !== void 0 && Number.isInteger(props.minSize) && props.minSize > fileRow.file.size) {
                newFileRows[index].errorMessage = `file size must be greater than ${(0, _utils.formatBytes)(props.minSize)}`;
                newFileRows[index].status = _constants.FILE_STATUS.error;
                newFileRows[index].progressAmount = _constants.PROGRESS_AMOUNT_LOADING_COMPLETE;
                (0, _utils.handleAriaLiveUpdates)(_constants.ARIA_LIVE_ELEMENT_ID.ADDITION, `${newFileRows[index].file.name} added, upload failed: ${newFileRows[index].errorMessage}`);
                props.setFileRows([...newFileRows]);
              } else if (props.maxSize !== void 0 && Number.isInteger(props.maxSize) && props.maxSize < fileRow.file.size) {
                newFileRows[index].errorMessage = `file size must be less than ${(0, _utils.formatBytes)(props.maxSize)}`;
                newFileRows[index].status = _constants.FILE_STATUS.error;
                newFileRows[index].progressAmount = _constants.PROGRESS_AMOUNT_LOADING_COMPLETE;
                (0, _utils.handleAriaLiveUpdates)(_constants.ARIA_LIVE_ELEMENT_ID.ADDITION, `${newFileRows[index].file.name} added, upload failed: ${newFileRows[index].errorMessage}`);
                props.setFileRows([...newFileRows]);
              } else if (index >= newFileRows.length - rejectedFiles.length) {
                newFileRows[index].errorMessage = fileRow.file.type ? `file type of ${fileRow.file.type} is not accepted` : "file type is not accepted";
                newFileRows[index].status = _constants.FILE_STATUS.error;
                newFileRows[index].progressAmount = _constants.PROGRESS_AMOUNT_LOADING_COMPLETE;
                (0, _utils.handleAriaLiveUpdates)(_constants.ARIA_LIVE_ELEMENT_ID.ADDITION, `${newFileRows[index].file.name} added, upload failed: ${newFileRows[index].errorMessage}`);
                props.setFileRows([...newFileRows]);
              } else if (props.processFileOnDrop) {
                props.processFileOnDrop(fileRow.file, fileRow.id, newFileRows).then(({
                  errorMessage,
                  fileInfo
                }) => {
                  if (fileInfo) {
                    newFileRows[index].fileInfo = fileInfo;
                  }
                  if (errorMessage) {
                    newFileRows[index].errorMessage = errorMessage;
                    newFileRows[index].status = _constants.FILE_STATUS.error;
                    newFileRows[index].progressAmount = _constants.PROGRESS_AMOUNT_LOADING_COMPLETE;
                  } else {
                    newFileRows[index].status = _constants.FILE_STATUS.processed;
                    newFileRows[index].progressAmount = _constants.PROGRESS_AMOUNT_LOADING_COMPLETE;
                  }
                }).catch((error) => {
                  console.error("error with processFileOnDrop", error);
                  newFileRows[index].errorMessage = "unknown processing error";
                  newFileRows[index].status = _constants.FILE_STATUS.error;
                  newFileRows[index].progressAmount = _constants.PROGRESS_AMOUNT_LOADING_COMPLETE;
                  (0, _utils.handleAriaLiveUpdates)(_constants.ARIA_LIVE_ELEMENT_ID.ADDITION, `${newFileRows[index].file.name} added, upload failed: ${newFileRows[index].errorMessage}`);
                }).finally(() => {
                  props.setFileRows([...newFileRows]);
                });
              } else {
                newFileRows[index].status = _constants.FILE_STATUS.processed;
                newFileRows[index].progressAmount = _constants.PROGRESS_AMOUNT_LOADING_COMPLETE;
                (0, _utils.handleAriaLiveUpdates)(_constants.ARIA_LIVE_ELEMENT_ID.ADDITION, `${newFileRows[index].file.name} added, upload successful`);
                props.setFileRows([...newFileRows]);
              }
            };
            reader.readAsDataURL(fileRow.file);
          }
        });
      }, [props]);
      const removeFileRow = (event) => {
        var _a;
        event.preventDefault();
        const indexOfFileRowToRemove = Number((_a = event == null ? void 0 : event.currentTarget) == null ? void 0 : _a.getAttribute("index"));
        (0, _utils.handleAriaLiveUpdates)(_constants.ARIA_LIVE_ELEMENT_ID.REMOVAL, `${props.fileRows[indexOfFileRowToRemove].file.name} removed`);
        props.setFileRows([...props.fileRows.toSpliced(indexOfFileRowToRemove, 1)]);
        const label2 = document.querySelector('[data-baseweb="file-uploader-label"]');
        if (label2) {
          label2.focus();
        }
      };
      const noFilesAreLoading = React2.useMemo(() => !props.fileRows.find((fileRow) => fileRow.status === _constants.FILE_STATUS.added), [props.fileRows]);
      return React2.createElement(_locale.LocaleContext.Consumer, null, (locale) => {
        var _a, _b, _c, _d, _e, _f, _g, _h, _i, _j, _k, _l, _m, _n, _o, _p, _q, _r, _s, _t, _u;
        return React2.createElement(ParentRoot, _extends2({
          "data-baseweb": "file-uploader-parent-root"
        }, parentRootProps), React2.createElement("span", {
          "aria-live": "assertive",
          "aria-relevant": "additions",
          className: css({
            top: 0,
            left: "-4px",
            width: "1px",
            height: "1px",
            position: "absolute",
            overflow: "hidden"
          }),
          id: _constants.ARIA_LIVE_ELEMENT_ID.ADDITION
        }), React2.createElement("span", {
          "aria-live": "polite",
          "aria-relevant": "additions",
          className: css({
            top: 0,
            left: "-2px",
            width: "1px",
            height: "1px",
            position: "absolute",
            overflow: "hidden"
          }),
          id: _constants.ARIA_LIVE_ELEMENT_ID.REMOVAL
        }), props.label && React2.createElement(Label, _extends2({
          "data-baseweb": "file-uploader-label",
          tabIndex: -1
        }, labelProps, {
          $disabled: !!props.disabled
        }), props.label), React2.createElement(_fileUploaderBasic.FileUploaderBasic, _extends2({
          buttonIcon: () => React2.createElement(_upload.default, {
            "aria-hidden": "true"
          }),
          buttonText: locale.fileuploader.buttonText,
          contentMessage: locale.fileuploader.contentMessage,
          overrides: {
            ButtonComponent: {
              props: {
                "aria-describedby": "file-uploader-hint",
                shape: _button.SHAPE.default,
                size: _button.SIZE.default,
                ...(_b = (_a = props.overrides) == null ? void 0 : _a.ButtonComponent) == null ? void 0 : _b.props,
                style: {
                  marginTop: 0,
                  ...(0, _utils.destructureStyleOverride)(
                    // @ts-expect-error
                    (_e = (_d = (_c = props.overrides) == null ? void 0 : _c.ButtonComponent) == null ? void 0 : _d.props) == null ? void 0 : _e.style,
                    theme
                  )
                },
                overrides: {
                  // @ts-expect-error
                  ...(_h = (_g = (_f = props.overrides) == null ? void 0 : _f.ButtonComponent) == null ? void 0 : _g.props) == null ? void 0 : _h.overrides,
                  BaseButton: {
                    // @ts-expect-error
                    ...(_l = (_k = (_j = (_i = props.overrides) == null ? void 0 : _i.ButtonComponent) == null ? void 0 : _j.props) == null ? void 0 : _k.overrides) == null ? void 0 : _l.BaseButton,
                    style: {
                      backgroundColor: theme.colors.backgroundPrimary,
                      height: theme.sizing.scale950,
                      display: "flex",
                      flexDirection: "row",
                      gap: "8px",
                      ...theme.typography.LabelSmall,
                      ...(0, _utils.destructureStyleOverride)(
                        // @ts-expect-error
                        (_q = (_p = (_o = (_n = (_m = props.overrides) == null ? void 0 : _m.ButtonComponent) == null ? void 0 : _n.props) == null ? void 0 : _o.overrides) == null ? void 0 : _p.BaseButton) == null ? void 0 : _q.style,
                        theme
                      )
                    }
                  }
                }
              }
            },
            ContentMessage: {
              style: {
                ...theme.typography.ParagraphSmall,
                color: theme.colors.contentTertiary,
                ...(0, _utils.destructureStyleOverride)((_s = (_r = props.overrides) == null ? void 0 : _r.ContentMessage) == null ? void 0 : _s.style, theme)
              }
            },
            FileDragAndDrop: {
              style: (fileDragAndDropProps) => {
                var _a2, _b2;
                return {
                  backgroundColor: fileDragAndDropProps.$theme.colors.fileUploaderBackgroundColor,
                  borderColor: fileDragAndDropProps.$isDragActive ? fileDragAndDropProps.$theme.colors.borderSelected : fileDragAndDropProps.$theme.colors.fileUploaderBorderColorDefault,
                  borderStyle: "solid",
                  borderWidth: "3px",
                  flexDirection: "row",
                  flexWrap: "wrap",
                  gap: theme.sizing.scale300,
                  paddingBottom: theme.sizing.scale600,
                  paddingLeft: theme.sizing.scale600,
                  paddingRight: theme.sizing.scale600,
                  paddingTop: theme.sizing.scale600,
                  ...(0, _utils.destructureStyleOverride)((_b2 = (_a2 = props.overrides) == null ? void 0 : _a2.FileDragAndDrop) == null ? void 0 : _b2.style, theme)
                };
              }
            },
            Root: {
              style: {
                marginBottom: theme.sizing.scale300,
                ...(0, _utils.destructureStyleOverride)((_u = (_t = props.overrides) == null ? void 0 : _t.Root) == null ? void 0 : _u.style, theme)
              }
            },
            ...fileUploaderBasicOverrides
          },
          swapButtonAndMessage: true
        }, fileUploaderBasicProps, {
          // Disable uploads while files are loading, even if application passes disabled as false
          disabled: !!props.disabled ? props.disabled : !!props.fileRows.find((fileRow) => fileRow.status === _constants.FILE_STATUS.added),
          onDrop,
          onDropAccepted: (_) => {
          },
          onDropRejected: (_) => {
          },
          progressAmount: void 0
        })), props.fileRows.length > 0 && React2.createElement(FileRows, _extends2({
          "data-baseweb": "file-uploader-file-rows"
        }, fileRowsProps), props.fileRows.map((fileRow, index) => React2.createElement(FileRow, _extends2({
          id: `file-uploader-file-row-${index}`,
          "data-baseweb": "file-uploader-file-row",
          key: fileRow.id
        }, fileRowProps), props.itemPreview && React2.createElement(ItemPreviewContainer, _extends2({
          "aria-hidden": "true",
          "data-baseweb": "file-uploader-item-preview-container"
        }, itemPreviewContainerProps), fileRow.imagePreviewThumbnail ? React2.createElement(ImagePreviewThumbnail, _extends2({
          alt: fileRow.file.name,
          "data-baseweb": "file-uploader-image-preview-thumbnail",
          src: fileRow.imagePreviewThumbnail
        }, imagePreviewThumbnailProps)) : React2.createElement(PaperclipFilledIcon, _extends2({
          "data-baseweb": "file-uploader-paperclip-filled-icon",
          color: theme.colors.contentSecondary
        }, paperclipFilledIconProps))), React2.createElement(FileRowColumn, _extends2({
          "data-baseweb": "file-uploader-file-row-column"
        }, fileRowColumnProps), React2.createElement(FileRowContent, _extends2({
          "data-baseweb": "file-uploader-file-row-content"
        }, fileRowContentProps), React2.createElement(FileRowText, _extends2({
          "data-baseweb": "file-uploader-file-row-text"
        }, fileRowTextProps), React2.createElement(FileRowFileName, _extends2({
          "data-baseweb": "file-uploader-file-row-file-name"
        }, fileRowFileNameProps), fileRow.file.name), React2.createElement(FileRowUploadMessage, _extends2({
          "data-baseweb": "file-uploader-file-row-upload-message",
          $color: (0, _constants.FILE_STATUS_TO_COLOR_MAP)(theme)[fileRow.status]
        }, fileRowUploadMessageProps), fileRow.status === _constants.FILE_STATUS.error && React2.createElement(React2.Fragment, null, React2.createElement(CircleExclamationPointFilledIcon, _extends2({
          "aria-hidden": "true",
          color: (0, _constants.FILE_STATUS_TO_COLOR_MAP)(theme)[fileRow.status],
          "data-baseweb": "file-uploader-circle-exclamation-point-filled-icon",
          title: fileRow.status
        }, circleExclamationPointFilledIconProps)), React2.createElement(FileRowUploadText, _extends2({
          "aria-errormessage": fileRow.errorMessage,
          "aria-invalid": true,
          "data-baseweb": "file-uploader-file-row-upload-message-text",
          id: `file-uploader-file-row-upload-message-text-${index}`
        }, fileRowUploadTextProps), locale.fileuploader.error, fileRow.errorMessage)), fileRow.status === _constants.FILE_STATUS.processed && React2.createElement(React2.Fragment, null, React2.createElement(CircleCheckFilledIcon, _extends2({
          "aria-hidden": "true",
          color: (0, _constants.FILE_STATUS_TO_COLOR_MAP)(theme)[fileRow.status],
          "data-baseweb": "file-uploader-circle-check-filled-icon",
          title: fileRow.status
        }, circleCheckFilledIconProps)), React2.createElement(FileRowUploadText, _extends2({
          "data-baseweb": "file-uploader-file-row-upload-message-text"
        }, fileRowUploadTextProps), locale.fileuploader.processed)), fileRow.status === _constants.FILE_STATUS.added && React2.createElement(FileRowUploadText, _extends2({
          $color: theme.colors.contentTertiary,
          "data-baseweb": "file-uploader-file-row-upload-message-text"
        }, fileRowUploadTextProps), locale.fileuploader.added))), noFilesAreLoading && React2.createElement(DeleteButtonComponent, _extends2({
          "aria-label": `Remove ${fileRow.file.name}`,
          "data-baseweb": "file-uploader-delete-button-component",
          index,
          onClick: removeFileRow,
          kind: _button.KIND.tertiary,
          shape: _button.SHAPE.circle,
          size: _button.SIZE.compact
        }, deleteButtonProps), React2.createElement(TrashCanFilledIcon, _extends2({
          "aria-hidden": "true",
          "data-baseweb": "file-uploader-trash-can-filled-icon",
          overrides: {
            Svg: {
              style: {
                verticalAlign: "middle"
              }
            }
          },
          size: theme.sizing.scale600,
          title: "remove"
        }, trashCanFilledIconProps)))), React2.createElement(ProgressBarComponent, _extends2({
          "aria-hidden": "true",
          "data-baseweb": "file-uploader-progress-bar",
          overrides: {
            Bar: {
              style: {
                marginTop: theme.sizing.scale0,
                marginBottom: theme.sizing.scale0,
                marginLeft: 0,
                marginRight: 0
              }
            },
            BarContainer: {
              style: {
                marginTop: 0,
                marginBottom: 0,
                marginLeft: 0,
                marginRight: 0
              }
            },
            BarProgress: {
              // @ts-ignore
              style: ({
                $theme
              }) => ({
                backgroundColor: (0, _constants.FILE_STATUS_TO_COLOR_MAP)($theme)[fileRow.status]
              })
            }
          },
          size: _progressBar.SIZE.small,
          value: fileRow.progressAmount ?? _constants.PROGRESS_AMOUNT_LOADING_COMPLETE
        }, progressBarProps)))))), props.hint && React2.createElement(Hint, _extends2({
          "data-baseweb": "file-uploader-hint",
          id: "file-uploader-hint",
          $fileCount: props.fileRows.length
        }, hintProps), props.hint));
      });
    }
    FileUploader.defaultProps = {
      fileRows: [],
      setFileRows: () => {
      }
    };
  }
});

// node_modules/baseui/file-uploader/types.js
var require_types5 = __commonJS({
  "node_modules/baseui/file-uploader/types.js"() {
    "use strict";
  }
});

// node_modules/baseui/file-uploader/index.js
var require_file_uploader2 = __commonJS({
  "node_modules/baseui/file-uploader/index.js"(exports) {
    Object.defineProperty(exports, "__esModule", {
      value: true
    });
    var _exportNames = {
      FileUploader: true,
      StyledFileRow: true,
      StyledFileRowColumn: true,
      StyledFileRowContent: true,
      StyledFileRowFileName: true,
      StyledFileRowText: true,
      StyledFileRowUploadMessage: true,
      StyledFileRowUploadText: true,
      StyledFileRows: true,
      StyledHint: true,
      StyledImagePreviewThumbnail: true,
      StyledItemPreviewContainer: true,
      StyledLabel: true,
      StyledParentRoot: true
    };
    Object.defineProperty(exports, "FileUploader", {
      enumerable: true,
      get: function() {
        return _fileUploader.default;
      }
    });
    Object.defineProperty(exports, "StyledFileRow", {
      enumerable: true,
      get: function() {
        return _styledComponents.StyledFileRow;
      }
    });
    Object.defineProperty(exports, "StyledFileRowColumn", {
      enumerable: true,
      get: function() {
        return _styledComponents.StyledFileRowColumn;
      }
    });
    Object.defineProperty(exports, "StyledFileRowContent", {
      enumerable: true,
      get: function() {
        return _styledComponents.StyledFileRowContent;
      }
    });
    Object.defineProperty(exports, "StyledFileRowFileName", {
      enumerable: true,
      get: function() {
        return _styledComponents.StyledFileRowFileName;
      }
    });
    Object.defineProperty(exports, "StyledFileRowText", {
      enumerable: true,
      get: function() {
        return _styledComponents.StyledFileRowText;
      }
    });
    Object.defineProperty(exports, "StyledFileRowUploadMessage", {
      enumerable: true,
      get: function() {
        return _styledComponents.StyledFileRowUploadMessage;
      }
    });
    Object.defineProperty(exports, "StyledFileRowUploadText", {
      enumerable: true,
      get: function() {
        return _styledComponents.StyledFileRowUploadText;
      }
    });
    Object.defineProperty(exports, "StyledFileRows", {
      enumerable: true,
      get: function() {
        return _styledComponents.StyledFileRows;
      }
    });
    Object.defineProperty(exports, "StyledHint", {
      enumerable: true,
      get: function() {
        return _styledComponents.StyledHint;
      }
    });
    Object.defineProperty(exports, "StyledImagePreviewThumbnail", {
      enumerable: true,
      get: function() {
        return _styledComponents.StyledImagePreviewThumbnail;
      }
    });
    Object.defineProperty(exports, "StyledItemPreviewContainer", {
      enumerable: true,
      get: function() {
        return _styledComponents.StyledItemPreviewContainer;
      }
    });
    Object.defineProperty(exports, "StyledLabel", {
      enumerable: true,
      get: function() {
        return _styledComponents.StyledLabel;
      }
    });
    Object.defineProperty(exports, "StyledParentRoot", {
      enumerable: true,
      get: function() {
        return _styledComponents.StyledParentRoot;
      }
    });
    var _fileUploader = _interopRequireDefault(require_file_uploader());
    var _styledComponents = require_styled_components5();
    var _types = require_types5();
    Object.keys(_types).forEach(function(key) {
      if (key === "default" || key === "__esModule") return;
      if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;
      if (key in exports && exports[key] === _types[key]) return;
      Object.defineProperty(exports, key, {
        enumerable: true,
        get: function() {
          return _types[key];
        }
      });
    });
    function _interopRequireDefault(obj) {
      return obj && obj.__esModule ? obj : { default: obj };
    }
  }
});
export default require_file_uploader2();
//# sourceMappingURL=baseui_file-uploader.js.map
